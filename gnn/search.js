window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"agent": {"fullname": "agent", "modulename": "agent", "kind": "module", "doc": "<p></p>\n"}, "agent.dqn": {"fullname": "agent.dqn", "modulename": "agent.dqn", "kind": "module", "doc": "<p></p>\n"}, "agent.dqn.dqn": {"fullname": "agent.dqn.dqn", "modulename": "agent.dqn.dqn", "kind": "module", "doc": "<p>Agent that uses a GNN for its DQN, for the RoomEnv2 environment.</p>\n"}, "agent.dqn.dqn.DQNAgent": {"fullname": "agent.dqn.dqn.DQNAgent", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent", "kind": "class", "doc": "<p>DQN Agent interacting with environment.</p>\n\n<p>This is an upgrade from <a href=\"https://github.com/humemai/agent-room-env-v2-lstm\">https://github.com/humemai/agent-room-env-v2-lstm</a>. The two\npolicies, i.e., memory management and exploration, are learned by a GNN at once!\nThe question-answering function is still hand-crafted. Potentially, this can be\nlearned by a contextual bandit algorithm.</p>\n\n<p>Based on <a href=\"https://github.com/Curt-Park/rainbow-is-all-you-need/\">https://github.com/Curt-Park/rainbow-is-all-you-need/</a></p>\n"}, "agent.dqn.dqn.DQNAgent.__init__": {"fullname": "agent.dqn.dqn.DQNAgent.__init__", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.__init__", "kind": "function", "doc": "<p>Initialization.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>env_str:</strong>  environment string. This has to be \"room_env:RoomEnv-v2\"</li>\n<li><strong>num_iterations:</strong>  number of iterations to train</li>\n<li><strong>replay_buffer_size:</strong>  size of replay buffer</li>\n<li><strong>warm_start:</strong>  number of steps to fill the replay buffer, before training</li>\n<li><strong>batch_size:</strong>  This is the amount of samples sampled from the replay buffer.</li>\n<li><strong>target_update_interval:</strong>  interval to update target network</li>\n<li><strong>epsilon_decay_until:</strong>  until which iteration to decay epsilon</li>\n<li><strong>max_epsilon:</strong>  maximum epsilon</li>\n<li><strong>min_epsilon:</strong>  minimum epsilon</li>\n<li><strong>gamma:</strong>  discount factor</li>\n<li><strong>learning_rate:</strong>  learning rate for the optimizer</li>\n<li><strong>capacity:</strong>  The capacity of each human-like memory systems</li>\n<li><strong>pretrain_semantic:</strong>  whether to pretrain the semantic memory system.</li>\n<li><strong>semantic_decay_factor:</strong>  decay factor for the semantic memory system</li>\n<li><strong>dqn_params:</strong>  parameters for the DQN</li>\n<li><strong>num_samples_for_results:</strong>  The number of samples to validate / test the agent.</li>\n<li><strong>validation_interval:</strong>  interval to validate</li>\n<li><strong>plotting_interval:</strong>  interval to plot results</li>\n<li><strong>train_seed:</strong>  seed for training</li>\n<li><strong>test_seed:</strong>  seed for testing</li>\n<li><strong>device:</strong>  This is either \"cpu\" or \"cuda\".</li>\n<li><strong>env_config:</strong>  The configuration of the environment.\nquestion_prob: The probability of a question being asked at every\n    observation.\nterminates_at: The maximum number of steps to take in an episode.\nseed: seed for env\nroom_size: The room configuration to use. Choose one of \"dev\", \"xxs\",\n    \"xs\", \"s\", \"m\", or \"l\".</li>\n<li><strong>intrinsic_explore_reward:</strong>  intrinsic reward for exploration</li>\n<li><strong>ddqn:</strong>  whether to use double DQN</li>\n<li><strong>default_root_dir:</strong>  default root directory to save results</li>\n<li><strong>explore_policy:</strong>  exploration policy. Choose one of \"random\", \"avoid_walls\",\n\"RL\".</li>\n<li><strong>qa_function:</strong>  question answering policy Choose one of \"episodic_semantic\",\n\"random\", or \"neural\". qa_function shouldn't be trained with RL. There is\nno sequence of states / actions to learn from.</li>\n<li><strong>mm_policy:</strong>  memory management policy. Choose one of \"random\", \"episodic\",\n\"semantic\", \"forget\", \"RL\", or \"handcrafted\".</li>\n<li><strong>scale_reward:</strong>  whether to scale the reward</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">env_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;room_env:RoomEnv-v2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_iterations</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span>,</span><span class=\"param\">\t<span class=\"n\">replay_buffer_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">warm_start</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">target_update_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon_decay_until</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span>,</span><span class=\"param\">\t<span class=\"n\">max_epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;mm&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"s1\">&#39;explore&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">capacity</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;long&#39;</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s1\">&#39;short&#39;</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">pretrain_semantic</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;include_walls&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;exclude_walls&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">semantic_decay_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">dqn_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;gcn_layer_params&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;StarE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;embedding_dim&#39;</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_layers&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gcn_drop&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;triple_qual_weight&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.8</span><span class=\"p\">},</span> <span class=\"s1\">&#39;relu_between_gcn_layers&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dropout_between_gcn_layers&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mlp_params&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_hidden_layers&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dueling_dqn&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}}</span>,</span><span class=\"param\">\t<span class=\"n\">num_samples_for_results</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;val&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;test&#39;</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">validation_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">plotting_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">train_seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">test_seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;cpu&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cuda&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cpu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">env_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;question_prob&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;terminates_at&#39;</span><span class=\"p\">:</span> <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"s1\">&#39;randomize_observations&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;all&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;room_size&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;l&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rewards&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;correct&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wrong&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;partial&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">},</span> <span class=\"s1\">&#39;make_everything_static&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_total_questions&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"s1\">&#39;question_interval&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;include_walls_in_observations&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">intrinsic_explore_reward</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">ddqn</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./training-results/&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">explore_policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;avoid_walls&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;RL&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RL&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">qa_function</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;latest_strongest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">mm_policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episodic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;semantic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forget&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;RL&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;handcrafted&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RL&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">scale_reward</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"fullname": "agent.dqn.dqn.DQNAgent.default_root_dir", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.default_root_dir", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.train_seed": {"fullname": "agent.dqn.dqn.DQNAgent.train_seed", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.train_seed", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.test_seed": {"fullname": "agent.dqn.dqn.DQNAgent.test_seed", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.test_seed", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.env_str": {"fullname": "agent.dqn.dqn.DQNAgent.env_str", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.env_str", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.env_config": {"fullname": "agent.dqn.dqn.DQNAgent.env_config", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.env_config", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.qa_function": {"fullname": "agent.dqn.dqn.DQNAgent.qa_function", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.qa_function", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"fullname": "agent.dqn.dqn.DQNAgent.num_samples_for_results", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.num_samples_for_results", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.validation_interval": {"fullname": "agent.dqn.dqn.DQNAgent.validation_interval", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.validation_interval", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.capacity": {"fullname": "agent.dqn.dqn.DQNAgent.capacity", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.capacity", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"fullname": "agent.dqn.dqn.DQNAgent.pretrain_semantic", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.pretrain_semantic", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"fullname": "agent.dqn.dqn.DQNAgent.semantic_decay_factor", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.semantic_decay_factor", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.env": {"fullname": "agent.dqn.dqn.DQNAgent.env", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.env", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.device": {"fullname": "agent.dqn.dqn.DQNAgent.device", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.device", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"fullname": "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.intrinsic_explore_reward", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.ddqn": {"fullname": "agent.dqn.dqn.DQNAgent.ddqn", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.ddqn", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.val_file_names": {"fullname": "agent.dqn.dqn.DQNAgent.val_file_names", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.val_file_names", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.is_notebook": {"fullname": "agent.dqn.dqn.DQNAgent.is_notebook", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.is_notebook", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.num_iterations": {"fullname": "agent.dqn.dqn.DQNAgent.num_iterations", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.num_iterations", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"fullname": "agent.dqn.dqn.DQNAgent.plotting_interval", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.plotting_interval", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"fullname": "agent.dqn.dqn.DQNAgent.replay_buffer_size", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.replay_buffer_size", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.batch_size": {"fullname": "agent.dqn.dqn.DQNAgent.batch_size", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.batch_size", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.epsilon": {"fullname": "agent.dqn.dqn.DQNAgent.epsilon", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.epsilon", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"fullname": "agent.dqn.dqn.DQNAgent.max_epsilon", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.max_epsilon", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"fullname": "agent.dqn.dqn.DQNAgent.min_epsilon", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.min_epsilon", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"fullname": "agent.dqn.dqn.DQNAgent.epsilon_decay_until", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.epsilon_decay_until", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"fullname": "agent.dqn.dqn.DQNAgent.target_update_interval", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.target_update_interval", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.gamma": {"fullname": "agent.dqn.dqn.DQNAgent.gamma", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.gamma", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.learning_rate": {"fullname": "agent.dqn.dqn.DQNAgent.learning_rate", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.warm_start": {"fullname": "agent.dqn.dqn.DQNAgent.warm_start", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.warm_start", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.explore_policy": {"fullname": "agent.dqn.dqn.DQNAgent.explore_policy", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.explore_policy", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.mm_policy": {"fullname": "agent.dqn.dqn.DQNAgent.mm_policy", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.mm_policy", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.scale_reward": {"fullname": "agent.dqn.dqn.DQNAgent.scale_reward", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.scale_reward", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"fullname": "agent.dqn.dqn.DQNAgent.action_mm2str", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.action_mm2str", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"fullname": "agent.dqn.dqn.DQNAgent.action_mm2int", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.action_mm2int", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"fullname": "agent.dqn.dqn.DQNAgent.action_explore2str", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.action_explore2str", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"fullname": "agent.dqn.dqn.DQNAgent.action_explore2int", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.action_explore2int", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.dqn_params": {"fullname": "agent.dqn.dqn.DQNAgent.dqn_params", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.dqn_params", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.dqn": {"fullname": "agent.dqn.dqn.DQNAgent.dqn", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.dqn", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.dqn_target": {"fullname": "agent.dqn.dqn.DQNAgent.dqn_target", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.dqn_target", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.optimizer": {"fullname": "agent.dqn.dqn.DQNAgent.optimizer", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.optimizer", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.q_values": {"fullname": "agent.dqn.dqn.DQNAgent.q_values", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.q_values", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"fullname": "agent.dqn.dqn.DQNAgent.remove_results_from_disk", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.remove_results_from_disk", "kind": "function", "doc": "<p>Remove the results from the disk.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"fullname": "agent.dqn.dqn.DQNAgent.init_memory_systems", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.init_memory_systems", "kind": "function", "doc": "<p>Initialize the agent's memory systems. This has nothing to do with the\nreplay buffer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.reset": {"fullname": "agent.dqn.dqn.DQNAgent.reset", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.reset", "kind": "function", "doc": "<p>Reset the env and the memory systems. observations are encoded.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.step": {"fullname": "agent.dqn.dqn.DQNAgent.step", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.step", "kind": "function", "doc": "<p>Step of the algorithm. This is the only step that interacts with the\nenvironment.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>greedy:</strong>  whether to use greedy policy</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>a_explore, q_explore, a_mm, q_mm, reward, intrinsic_explore_reward, answers,\n  done</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">greedy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"fullname": "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.get_intrinsic_explore_reward", "kind": "function", "doc": "<p>Get intrinsic actions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>a_explore:</strong>  action in string</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>intrinsic explore reward</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">a_explore</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"fullname": "agent.dqn.dqn.DQNAgent.fill_replay_buffer", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.fill_replay_buffer", "kind": "function", "doc": "<p>Make the replay buffer full in the beginning with the uniformly-sampled\nactions. The filling continues until it reaches the warm start size.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.train": {"fullname": "agent.dqn.dqn.DQNAgent.train", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.train", "kind": "function", "doc": "<p>Train the agent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"fullname": "agent.dqn.dqn.DQNAgent.validate_test_middle", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.validate_test_middle", "kind": "function", "doc": "<p>A function shared by explore validation and test in the middle.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>val_or_test:</strong>  \"val\" or \"test\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>scores_local: a list of total episode rewards\n  states_local: memory states\n  q_values_local: q values\n  actions_local: greey actions taken</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">val_or_test</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.validate": {"fullname": "agent.dqn.dqn.DQNAgent.validate", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.validate", "kind": "function", "doc": "<p>Validate the agent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.test": {"fullname": "agent.dqn.dqn.DQNAgent.test", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.test", "kind": "function", "doc": "<p>Test the agent.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>checkpoint:</strong>  The checkpoint to override.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">checkpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.dqn.DQNAgent.plot_results": {"fullname": "agent.dqn.dqn.DQNAgent.plot_results", "modulename": "agent.dqn.dqn", "qualname": "DQNAgent.plot_results", "kind": "function", "doc": "<p>Plot things for DQN training.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>to_plot:</strong>  what to plot:\ntraining_td_loss\nepsilons\ntraining_score\nvalidation_score\ntest_score\nq_values_train\nq_values_val\nq_values_test</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">to_plot</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span>, </span><span class=\"param\"><span class=\"n\">save_fig</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn": {"fullname": "agent.dqn.nn", "modulename": "agent.dqn.nn", "kind": "module", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn": {"fullname": "agent.dqn.nn.gnn", "modulename": "agent.dqn.nn.gnn", "kind": "module", "doc": "<p>A lot copied from <a href=\"https://github.com/migalkin/StarE\">https://github.com/migalkin/StarE</a></p>\n"}, "agent.dqn.nn.gnn.GNN": {"fullname": "agent.dqn.nn.gnn.GNN", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN", "kind": "class", "doc": "<p>Graph Neural Network model. This model is used to compute the Q-values for the\nmemory management and explore policies. This model has N layers of GCNConv or\nStarEConv layers and two MLPs for the memory management and explore policies,\nrespectively.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>entities:</strong>  List of entities</li>\n<li><strong>relations:</strong>  List of relations</li>\n<li><strong>gcn_layer_params:</strong>  The parameters for the GCN layers</li>\n<li><strong>gcn_type:</strong>  The type of GCN layer</li>\n<li><strong>mlp_params:</strong>  The parameters for the MLPs</li>\n<li><strong>rotational_for_relation:</strong>  Whether to use rotational embeddings for relations</li>\n<li><strong>device:</strong>  The device to use</li>\n<li><strong>embedding_dim:</strong>  The dimension of the embeddings</li>\n<li><strong>entity_to_idx:</strong>  The mapping from entities to indices</li>\n<li><strong>relation_to_idx:</strong>  The mapping from relations to indices</li>\n<li><strong>entity_embeddings:</strong>  The entity embeddings</li>\n<li><strong>relation_embeddings:</strong>  The relation embeddings</li>\n<li><strong>relu_between_gcn_layers:</strong>  Whether to apply ReLU activation between GCN layers</li>\n<li><strong>dropout_between_gcn_layers:</strong>  Whether to apply dropout between GCN layers</li>\n<li><strong>relu:</strong>  The ReLU activation function</li>\n<li><strong>drop:</strong>  The dropout layer</li>\n<li><strong>gcn_layers:</strong>  The GCN layers</li>\n<li><strong>mlp_mm:</strong>  The MLP for memory management policy</li>\n<li><strong>mlp_explore:</strong>  The MLP for explore policy</li>\n</ul>\n", "bases": "torch.nn.modules.module.Module"}, "agent.dqn.nn.gnn.GNN.__init__": {"fullname": "agent.dqn.nn.gnn.GNN.__init__", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.__init__", "kind": "function", "doc": "<p>Initialize the GNN model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>entities:</strong>  List of entities</li>\n<li><strong>relations:</strong>  List of relations</li>\n<li><strong>gcn_layer_params:</strong>  The parameters for the GCN layers</li>\n<li><strong>relu_between_gcn_layers:</strong>  Whether to apply ReLU activation between GCN layers</li>\n<li><strong>dropout_between_gcn_layers:</strong>  Whether to apply dropout between GCN layers</li>\n<li><strong>mlp_params:</strong>  The parameters for the MLPs</li>\n<li><strong>rotational_for_relation:</strong>  Whether to use rotational embeddings for relations</li>\n<li><strong>device:</strong>  The device to use. Default is \"cpu\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entities</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">relations</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">gcn_layer_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;StarE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;embedding_dim&#39;</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_layers&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gcn_drop&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;triple_qual_weight&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.8</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">relu_between_gcn_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dropout_between_gcn_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">mlp_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_hidden_layers&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dueling_dqn&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">rotational_for_relation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cpu&#39;</span></span>)</span>"}, "agent.dqn.nn.gnn.GNN.entities": {"fullname": "agent.dqn.nn.gnn.GNN.entities", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.entities", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.relations": {"fullname": "agent.dqn.nn.gnn.GNN.relations", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.relations", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"fullname": "agent.dqn.nn.gnn.GNN.gcn_layer_params", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.gcn_layer_params", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.gcn_type": {"fullname": "agent.dqn.nn.gnn.GNN.gcn_type", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.gcn_type", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.mlp_params": {"fullname": "agent.dqn.nn.gnn.GNN.mlp_params", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.mlp_params", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"fullname": "agent.dqn.nn.gnn.GNN.rotational_for_relation", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.rotational_for_relation", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.device": {"fullname": "agent.dqn.nn.gnn.GNN.device", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.device", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"fullname": "agent.dqn.nn.gnn.GNN.embedding_dim", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.embedding_dim", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"fullname": "agent.dqn.nn.gnn.GNN.entity_to_idx", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.entity_to_idx", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"fullname": "agent.dqn.nn.gnn.GNN.relation_to_idx", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.relation_to_idx", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"fullname": "agent.dqn.nn.gnn.GNN.entity_embeddings", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.entity_embeddings", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"fullname": "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.relu_between_gcn_layers", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"fullname": "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.dropout_between_gcn_layers", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.relu": {"fullname": "agent.dqn.nn.gnn.GNN.relu", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.relu", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.drop": {"fullname": "agent.dqn.nn.gnn.GNN.drop", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.drop", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"fullname": "agent.dqn.nn.gnn.GNN.mlp_mm", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.mlp_mm", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"fullname": "agent.dqn.nn.gnn.GNN.mlp_explore", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.mlp_explore", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.gnn.GNN.process_batch": {"fullname": "agent.dqn.nn.gnn.GNN.process_batch", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.process_batch", "kind": "function", "doc": "<p>Process the data batch.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data as a batch. This is the same as what the <code>forward</code>\nmethod receives. We will make them in to a batched version of the\nentity embeddings, relation embeddings, edge index, edge type, and\nqualifiers. StarE needs all of them, while vanilla-GCN only needs the\nentity embeddings and edge index.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>edge_idx: The shape is [2, num_quadruples]\n  edge_type: The shape is [num_quadruples]\n  quals: The shape is [3, number of qualifier key-value pairs]</p>\n  \n  <p>edge_idx_inv: The shape is [2, num_quadruples]\n  edge_type_inv: The shape is [num_quadruples]\n  quals_inv: The shape is [3, number of qualifier key-value pairs]</p>\n  \n  <p>short_memory_idx: The shape is [number of short-term memories]\n      the idx indexes <code>edge_idx</code> and <code>edge_type</code>\n  agent_entity_idx: The shape is [num batches]\n      the idx indexes <code>entity_embeddings</code></p>\n  \n  <p>num_short_memories: The number of short-term memories in each sample</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.gnn.GNN.forward": {"fullname": "agent.dqn.nn.gnn.GNN.forward", "modulename": "agent.dqn.nn.gnn", "qualname": "GNN.forward", "kind": "function", "doc": "<p>Forward pass of the GNN model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The input data as a batch.</li>\n<li><strong>policy_type:</strong>  The policy type to use.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The Q-values. The number of elements in the list is equal to the number of\n  samples in the batch. Each element is a tensor of Q-values for the actions\n  in the sample. The length of the tensor is equal to the number of actions\n  in the sample.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">policy_type</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;mm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;explore&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.mlp": {"fullname": "agent.dqn.nn.mlp", "modulename": "agent.dqn.nn.mlp", "kind": "module", "doc": "<p>A simple MLP with dueling DQN support.</p>\n"}, "agent.dqn.nn.mlp.MLP": {"fullname": "agent.dqn.nn.mlp.MLP", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP", "kind": "class", "doc": "<p>Multi-layer perceptron with ReLU activation functions.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>input_size:</strong>  Input size of the linear layer.</li>\n<li><strong>hidden_size:</strong>  Hidden size of the linear layer.</li>\n<li><strong>num_hidden_layers:</strong>  Number of layers in the MLP.</li>\n<li><strong>n_actions:</strong>  Number of actions.</li>\n<li><strong>device:</strong>  \"cpu\" or \"cuda\".</li>\n<li><strong>dueling_dqn:</strong>  Whether to use dueling DQN.</li>\n</ul>\n", "bases": "torch.nn.modules.module.Module"}, "agent.dqn.nn.mlp.MLP.__init__": {"fullname": "agent.dqn.nn.mlp.MLP.__init__", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.__init__", "kind": "function", "doc": "<p>Initialize the MLP.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>n_actions:</strong>  Number of actions.</li>\n<li><strong>input_size:</strong>  Input size of the linear layer.</li>\n<li><strong>hidden_size:</strong>  Hidden size of the linear layer.</li>\n<li><strong>device:</strong>  \"cpu\" or \"cuda\".</li>\n<li><strong>num_hidden_layers:</strong>  int, number of layers in the MLP.</li>\n<li><strong>dueling_dqn:</strong>  Whether to use dueling DQN.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">n_actions</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">input_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_hidden_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dueling_dqn</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "agent.dqn.nn.mlp.MLP.device": {"fullname": "agent.dqn.nn.mlp.MLP.device", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.device", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.input_size": {"fullname": "agent.dqn.nn.mlp.MLP.input_size", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.input_size", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.hidden_size": {"fullname": "agent.dqn.nn.mlp.MLP.hidden_size", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.hidden_size", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"fullname": "agent.dqn.nn.mlp.MLP.num_hidden_layers", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.num_hidden_layers", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.n_actions": {"fullname": "agent.dqn.nn.mlp.MLP.n_actions", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.n_actions", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"fullname": "agent.dqn.nn.mlp.MLP.dueling_dqn", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.dueling_dqn", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"fullname": "agent.dqn.nn.mlp.MLP.advantage_layer", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.advantage_layer", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.mlp.MLP.forward": {"fullname": "agent.dqn.nn.mlp.MLP.forward", "modulename": "agent.dqn.nn.mlp", "qualname": "MLP.forward", "kind": "function", "doc": "<p>Forward pass of the neural network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  Input tensor. The shape is (batch_size, lstm_hidden_size).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: Output tensor. The shape is (batch_size, n_actions).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv": {"fullname": "agent.dqn.nn.stare_conv", "modulename": "agent.dqn.nn.stare_conv", "kind": "module", "doc": "<p>StarE Convolution Layer.</p>\n\n<p>Paper: \"Message Passing for Hyper-Relational Knowledge Graphs\"\nGitHub: <a href=\"https://github.com/migalkin/StarE\">https://github.com/migalkin/StarE</a></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer", "kind": "class", "doc": "<p>StarE Convolution Layer.</p>\n\n<p>Implements the message passing for hyper-relational knowledge graphs.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>in_channels (int):</strong>  The number of input channels.</li>\n<li><strong>out_channels (int):</strong>  The number of output channels.</li>\n<li><strong>num_rels (int):</strong>  The number of relations.</li>\n<li><strong>gcn_drop (float):</strong>  The dropout probability.</li>\n<li><strong>triple_qual_weight (float):</strong>  The weight for the triple and qualifier embeddings.</li>\n<li><strong>device (Optional[torch.device]):</strong>  The device to use.</li>\n</ul>\n", "bases": "torch_geometric.nn.conv.message_passing.MessagePassing"}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.__init__", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.__init__", "kind": "function", "doc": "<p>Initialize the StarEConvLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>in_channels:</strong>  The number of input channels.</li>\n<li><strong>out_channels:</strong>  The number of output channels.</li>\n<li><strong>num_rels:</strong>  The number of relations.</li>\n<li><strong>gcn_drop:</strong>  The dropout probability.</li>\n<li><strong>triple_qual_weight:</strong>  The weight for the triple and qualifier embeddings.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_channels</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">out_channels</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_rels</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">gcn_drop</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">triple_qual_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span></span>)</span>"}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.in_channels", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.out_channels", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.num_rels", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.device", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.device", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.w_loop", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.w_in", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.w_in", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.w_out", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.w_out", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.w_rel", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.w_q", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.w_q", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.loop_rel", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.loop_ent", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.drop", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.drop", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.bn", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.bn", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.triple_qual_weight", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.reset_parameters", "kind": "function", "doc": "<p>Reset parameters using Xavier normal initialization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.forward", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.forward", "kind": "function", "doc": "<p>Perform forward pass of the StarE convolution layer.</p>\n\n<p><code>entity_embeddings</code> is a tensor of shape [num_nodes, emb_dim], which is a stack\nof entity embeddings. Since x is a sampled sub-graph of the entire hidden graph,\n<code>num_nodes</code> is always less than the total number of global entities.\n<code>edge_idx</code> is a tensor of shape [2, num_edges] and <code>edge_type</code> is a tensor\nof shape [num_edges]. <code>relation_embeddings</code> is a tensor of shape\n[num_rels, emb_dim].</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>entity_embeddings:</strong>  Node (the entities in a given graph) feature matrix.</li>\n<li><strong>relation_embeddings:</strong>  Relation embeddings.</li>\n<li><strong>edge_idx:</strong>  Graph edge indices.</li>\n<li><strong>edge_type:</strong>  Edge type indices.</li>\n<li><strong>quals:</strong>  Qualifier indices.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Output node features and relation embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">entity_embeddings</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">relation_embeddings</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">edge_idx</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">edge_type</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">quals</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.rel_transform", "kind": "function", "doc": "<p>Transform entity embeddings using relation embeddings.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ent_embed:</strong>  Entity embeddings.</li>\n<li><strong>rel_embed:</strong>  Relation embeddings.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Transformed entity embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ent_embed</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">rel_embed</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.qual_transform", "kind": "function", "doc": "<p>Transform qualifier embeddings.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>qualifier_ent:</strong>  Qualifier entity embeddings.</li>\n<li><strong>qualifier_rel:</strong>  Qualifier relation embeddings.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Transformed qualifier embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_ent</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_rel</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.qualifier_aggregate", "kind": "function", "doc": "<p>Aggregate qualifier embeddings.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>qualifier_emb:</strong>  Qualifier embeddings.</li>\n<li><strong>rel_part_emb:</strong>  Relation part embeddings.</li>\n<li><strong>alpha:</strong>  Weight factor for aggregation.</li>\n<li><strong>qual_index:</strong>  Qualifier indices.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Aggregated embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_emb</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">rel_part_emb</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">qual_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.update_rel_emb_with_qualifier", "kind": "function", "doc": "<p>Update relation embeddings with qualifier embeddings.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ent_embed:</strong>  Entity embeddings.</li>\n<li><strong>rel_embed:</strong>  Relation embeddings.</li>\n<li><strong>qualifier_ent:</strong>  Qualifier entity embeddings.</li>\n<li><strong>qualifier_rel:</strong>  Qualifier relation embeddings.</li>\n<li><strong>edge_type:</strong>  Edge type indices.</li>\n<li><strong>qual_index:</strong>  Qualifier indices.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Updated relation embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ent_embed</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">rel_embed</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_ent</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_rel</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">edge_type</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">qual_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.message", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.message", "kind": "function", "doc": "<p>Construct messages for message passing.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x_j:</strong>  Source node features.</li>\n<li><strong>x_i:</strong>  Target node features.</li>\n<li><strong>edge_type:</strong>  Edge type indices.</li>\n<li><strong>rel_embed:</strong>  Relation embeddings.</li>\n<li><strong>edge_norm:</strong>  Edge normalization coefficients.</li>\n<li><strong>mode (str):</strong>  Mode of message passing (in, out, loop).</li>\n<li><strong>ent_embed:</strong>  Entity embeddings.</li>\n<li><strong>qualifier_ent:</strong>  Qualifier entity embeddings.</li>\n<li><strong>qualifier_rel:</strong>  Qualifier relation embeddings.</li>\n<li><strong>qual_index:</strong>  Qualifier indices.</li>\n<li><strong>source_index:</strong>  Source node indices.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Messages for aggregation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_j</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">x_i</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">edge_type</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">rel_embed</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">edge_norm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ent_embed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_ent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">qualifier_rel</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">qual_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">source_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.update", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.update", "kind": "function", "doc": "<p>Update node features after aggregation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>aggr_out:</strong>  Aggregated messages.</li>\n<li><strong>mode:</strong>  Mode of message passing.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Updated node features.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">aggr_out</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.compute_norm", "kind": "function", "doc": "<p>Compute normalization coefficients for edges.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>edge_idx:</strong>  Edge indices.</li>\n<li><strong>num_ent:</strong>  Number of entities.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Normalization coefficients.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">edge_idx</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">num_ent</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"fullname": "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals", "modulename": "agent.dqn.nn.stare_conv", "qualname": "StarEConvLayer.coalesce_quals", "kind": "function", "doc": "<p>Coalesce qualifier embeddings.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>qual_embeddings:</strong>  Qualifier embeddings.</li>\n<li><strong>qual_index:</strong>  Qualifier indices.</li>\n<li><strong>num_edges:</strong>  Number of edges.</li>\n<li><strong>fill:</strong>  Fill value for empty embeddings. Default is 0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Coalesced qualifier embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">qual_embeddings</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">qual_index</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">num_edges</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">fill</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils": {"fullname": "agent.dqn.nn.utils", "modulename": "agent.dqn.nn.utils", "kind": "module", "doc": "<p>A lot copied from <a href=\"https://github.com/migalkin/StarE\">https://github.com/migalkin/StarE</a></p>\n"}, "agent.dqn.nn.utils.maybe_num_nodes": {"fullname": "agent.dqn.nn.utils.maybe_num_nodes", "modulename": "agent.dqn.nn.utils", "qualname": "maybe_num_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">num_nodes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.softmax": {"fullname": "agent.dqn.nn.utils.softmax", "modulename": "agent.dqn.nn.utils", "qualname": "softmax", "kind": "function", "doc": "<p>Computes a sparsely evaluated softmax.\nGiven a value tensor <code>src</code>, this function first groups the values\nalong the first dimension based on the indices specified in <code>index</code>,\nand then proceeds to compute the softmax individually for each group.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>src (Tensor):</strong>  The source tensor.</li>\n<li><strong>index (LongTensor):</strong>  The indices of elements for applying the softmax.</li>\n<li><strong>num_nodes (int, optional):</strong>  The number of nodes, <em>i.e.</em>\n<code>max_val + 1</code> of <code>index</code>. (default: <code>None</code>)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>out: The softmax values.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">src</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">num_nodes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.com_mult": {"fullname": "agent.dqn.nn.utils.com_mult", "modulename": "agent.dqn.nn.utils", "qualname": "com_mult", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.conj": {"fullname": "agent.dqn.nn.utils.conj", "modulename": "agent.dqn.nn.utils", "qualname": "conj", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.cconv": {"fullname": "agent.dqn.nn.utils.cconv", "modulename": "agent.dqn.nn.utils", "qualname": "cconv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.ccorr": {"fullname": "agent.dqn.nn.utils.ccorr", "modulename": "agent.dqn.nn.utils", "qualname": "ccorr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.rotate": {"fullname": "agent.dqn.nn.utils.rotate", "modulename": "agent.dqn.nn.utils", "qualname": "rotate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">h</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.scatter_": {"fullname": "agent.dqn.nn.utils.scatter_", "modulename": "agent.dqn.nn.utils", "qualname": "scatter_", "kind": "function", "doc": "<p>Aggregates all values from the <code>src</code> tensor at the indices\nspecified in the <code>index</code> tensor along the first dimension.\nIf multiple indices reference the same location, their contributions\nare aggregated according to <code>name</code> (either <code>\"add\"</code>,\n<code>\"mean\"</code> or <code>\"max\"</code>).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (string):</strong>  The aggregation to use (<code>\"add\"</code>, <code>\"mean\"</code>,\n<code>\"max\"</code>).</li>\n<li><strong>src (Tensor):</strong>  The source tensor.</li>\n<li><strong>index (LongTensor):</strong>  The indices of elements to scatter.</li>\n<li><strong>dim_size (int, optional):</strong>  Automatically create output tensor with size\n<code>dim_size</code> in the first dimension. If set to <code>None</code>, a\nminimal sized output tensor is returned. (default: <code>None</code>)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tensor: The aggregated tensor.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">src</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">dim_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.extract_entities_and_relations": {"fullname": "agent.dqn.nn.utils.extract_entities_and_relations", "modulename": "agent.dqn.nn.utils", "qualname": "extract_entities_and_relations", "kind": "function", "doc": "<p>Extract entities and relations from a sample.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>sample:</strong>  A list of quadruples: (head, relation, tail, qualifiers).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>entities: A list of entities.\n  relations: A list of relations.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sample</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.nn.utils.process_graph": {"fullname": "agent.dqn.nn.utils.process_graph", "modulename": "agent.dqn.nn.utils", "qualname": "process_graph", "kind": "function", "doc": "<p>Process a sample in a batch. All the indexes are local to the sample. When you\nbatch multiple samples, you need to offset some of the indexes to make them global.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>graph:</strong>  A list of quadruples: (head, relation, tail, qualifiers).</li>\n<li><strong>[['dep_007', 'atlocation', 'room_000', {'current_time':</strong>  2, 'strength': 1}],</li>\n<li><strong>['agent', 'atlocation', 'room_000', {'current_time':</strong>  2, 'strength': 1}],</li>\n<li><strong>['room_000', 'west', 'wall', {'current_time':</strong>  2, 'strength': 1}],</li>\n<li><strong>['room_000', 'north', 'wall', {'current_time':</strong>  2, 'strength': 1.8}],</li>\n<li>['dep_001',</li>\n<li>'atlocation',</li>\n<li>'room_000',</li>\n<li><strong>{'current_time':</strong>  2, 'timestamp': [0, 1]}],</li>\n<li><strong>['room_000', 'south', 'room_004', {'current_time':</strong>  2, 'timestamp': [1]}],</li>\n<li>['room_000',</li>\n<li>'east',</li>\n<li>'room_001',</li>\n<li><strong>{'current_time':</strong>  2, 'timestamp': [0], 'strength': 1}]]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>entities: The shape is [num_entities in the sample]\n  relations: The shape is [num_relations in the sample]\n  edge_idx: The shape is [2, num_quadruples]\n  edge_type: The shape is [num_quadruples]\n  quals: The shape is [3, number of qualifier key-value pairs]</p>\n  \n  <p>edge_idx_inv: The shape is [2, num_quadruples]\n  edge_type_inv: The shape is [num_quadruples]\n  quals_inv: The shape is [3, number of qualifier key-value pairs]</p>\n  \n  <p>short_memory_idx: The shape is [number of short-term memories]\n      the idx indexes <code>edge_idx</code> and <code>edge_type</code>\n  agent_entity_idx: One scalar value. the idx indexes <code>entity_embeddings</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sample</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils": {"fullname": "agent.dqn.utils", "modulename": "agent.dqn.utils", "kind": "module", "doc": "<p>Utility functions for DQN.</p>\n"}, "agent.dqn.utils.ReplayBuffer": {"fullname": "agent.dqn.utils.ReplayBuffer", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer", "kind": "class", "doc": "<p>A simple numpy replay buffer.</p>\n\n<p>numpy replay buffer is faster than deque or list.\ncopied from <a href=\"https://github.com/Curt-Park/rainbow-is-all-you-need\">https://github.com/Curt-Park/rainbow-is-all-you-need</a></p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>obs_buf (np.ndarray):</strong>  Buffer for observations, initialized as an array of None\nvalues of dtype=object.</li>\n<li><strong>next_obs_buf (np.ndarray):</strong>  Buffer for next observations, initialized similarly\nto obs_buf.</li>\n<li><strong>acts_explore_buf (np.ndarray):</strong>  Buffer for explore actions, initialized as an\narray of None values of dtype=object.</li>\n<li><strong>acts_mm_buf (np.ndarray):</strong>  Buffer for mm actions, initialized as an array of None\nvalues of dtype=object.</li>\n<li><strong>rews_explore_buf (np.ndarray):</strong>  Buffer for rewards, initialized as an array of\nzeros of dtype=np.float32.</li>\n<li><strong>rews_mm_buf (np.ndarray):</strong>  Buffer for rewards, initialized similarly to\nrews_explore_buf.</li>\n<li><strong>done_buf (np.ndarray):</strong>  Buffer for done flags, initialized as an array of zeros\nof dtype=np.float32.</li>\n<li><strong>max_size (int):</strong>  Maximum size of the buffer.</li>\n<li><strong>batch_size (int):</strong>  Batch size for sampling from the buffer.</li>\n<li><strong>ptr (int):</strong>  Pointer to the current position in the buffer.</li>\n<li><strong>size (int):</strong>  Current size of the buffer.</li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>from agent.dqn.utils import ReplayBuffer\nimport random\n\nbuffer = ReplayBuffer(8, 4)\n\nfor _ in range(6):\n\n    obs = {str(i): str(random.randint(0, 10)) for i in range(3)}\n    next_obs = {str(i): str(random.randint(0, 10)) for i in range(3)}\n    action_explore = random.randint(0, 4)\n    action_mm = [random.randint(0, 3) for _ in range(random.randint(1, 10))]\n    reward_explore = random.randint(0, 1)\n    reward_mm = random.randint(0, 1)\n    done = random.choice([False, True])\n    buffer.store(\n        *[\n            obs,\n            action_explore,\n            action_mm,\n            reward_explore,\n            reward_mm,\n            next_obs,\n            done,\n        ]\n    )\n\nsample = buffer.sample_batch()\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sample</span>\n<span class=\"go\">{&#39;obs&#39;: array([{&#39;0&#39;: &#39;5&#39;, &#39;1&#39;: &#39;10&#39;, &#39;2&#39;: &#39;2&#39;}, {&#39;0&#39;: &#39;9&#39;, &#39;1&#39;: &#39;2&#39;, &#39;2&#39;: &#39;5&#39;},</span>\n<span class=\"go\">        {&#39;0&#39;: &#39;6&#39;, &#39;1&#39;: &#39;10&#39;, &#39;2&#39;: &#39;9&#39;}, {&#39;0&#39;: &#39;6&#39;, &#39;1&#39;: &#39;0&#39;, &#39;2&#39;: &#39;6&#39;}],</span>\n<span class=\"go\">    dtype=object),</span>\n<span class=\"go\">&#39;next_obs&#39;: array([{&#39;0&#39;: &#39;10&#39;, &#39;1&#39;: &#39;0&#39;, &#39;2&#39;: &#39;2&#39;}, {&#39;0&#39;: &#39;9&#39;, &#39;1&#39;: &#39;2&#39;, &#39;2&#39;: &#39;4&#39;},</span>\n<span class=\"go\">        {&#39;0&#39;: &#39;1&#39;, &#39;1&#39;: &#39;7&#39;, &#39;2&#39;: &#39;1&#39;}, {&#39;0&#39;: &#39;8&#39;, &#39;1&#39;: &#39;9&#39;, &#39;2&#39;: &#39;0&#39;}],</span>\n<span class=\"go\">    dtype=object),</span>\n<span class=\"go\">&#39;acts_explore&#39;: array([4., 3., 2., 2.], dtype=float32),</span>\n<span class=\"go\">&#39;acts_mm&#39;: array([np.array([2, 0, 2, 1, 3]), np.array([0, 1, 2]),</span>\n<span class=\"go\">        np.array([0, 1, 3, 1, 1, 2, 2]), np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])],</span>\n<span class=\"go\">    dtype=object),</span>\n<span class=\"go\">&#39;rews_explore&#39;: array([0., 1., 1., 0.], dtype=float32),</span>\n<span class=\"go\">&#39;rews_mm&#39;: array([0., 1., 1., 0.], dtype=float32),</span>\n<span class=\"go\">&#39;done&#39;: array([1., 0., 1., 1.], dtype=float32)}</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sample</span><span class=\"p\">[</span><span class=\"s2\">&quot;acts_mm&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(4,)</span>\n</code></pre>\n</div>\n"}, "agent.dqn.utils.ReplayBuffer.__init__": {"fullname": "agent.dqn.utils.ReplayBuffer.__init__", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.__init__", "kind": "function", "doc": "<p>Initialize replay buffer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>size:</strong>  size of the buffer</li>\n<li><strong>batch_size:</strong>  batch size to sample</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If batch_size is greater than size.</li>\n</ul>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>The obs_buf, next_obs_buf, and acts_mm_buf are initialized with <code>None</code>\n  values and have <code>dtype=object</code> to accommodate arbitrary Python objects,\n  ensuring flexibility in storing different types of data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span></span>)</span>"}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.obs_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.obs_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.next_obs_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.next_obs_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.acts_explore_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.acts_explore_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.acts_mm_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.acts_mm_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.rews_explore_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.rews_explore_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.rews_mm_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.rews_mm_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.done_buf": {"fullname": "agent.dqn.utils.ReplayBuffer.done_buf", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.done_buf", "kind": "variable", "doc": "<p></p>\n"}, "agent.dqn.utils.ReplayBuffer.store": {"fullname": "agent.dqn.utils.ReplayBuffer.store", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.store", "kind": "function", "doc": "<p>Store the data in the buffer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>obs:</strong>  observation</li>\n<li><strong>act_explore:</strong>  explore action</li>\n<li><strong>act_mm:</strong>  memory management action</li>\n<li><strong>rew_explore:</strong>  reward for explore</li>\n<li><strong>rew_mm:</strong>  reward for memory management</li>\n<li><strong>next_obs:</strong>  next observation</li>\n<li><strong>done:</strong>  done</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">obs</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">act_explore</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">act_mm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">rew_explore</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">rew_mm</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">next_obs</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">done</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"fullname": "agent.dqn.utils.ReplayBuffer.sample_batch", "modulename": "agent.dqn.utils", "qualname": "ReplayBuffer.sample_batch", "kind": "function", "doc": "<p>Sample a batch of data from the buffer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of samples from the replay buffer.\n      obs: np.ndarray,\n      next_obs: np.ndarray,\n      acts_explore: np.ndarray,\n      acts_mm: np.ndarray,\n      rews_explore: np.ndarray,\n      rews_mm: np.ndarray,\n      done: np.ndarray</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.plot_results": {"fullname": "agent.dqn.utils.plot_results", "modulename": "agent.dqn.utils", "qualname": "plot_results", "kind": "function", "doc": "<p>Plot things for DQN training.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>scores:</strong>  a dictionary of scores for train, validation, and test.</li>\n<li><strong>training_loss:</strong>  a dict of training losses for all, mm, and explore.</li>\n<li><strong>epsilons:</strong>  a list of epsilons.</li>\n<li><strong>q_values:</strong>  a dictionary of q_values for train, validation, and test.</li>\n<li><strong>iteration_idx:</strong>  the current iteration index.</li>\n<li><strong>num_iterations:</strong>  the total number of iterations.</li>\n<li><strong>total_maximum_episode_rewards:</strong>  the total maximum episode rewards.</li>\n<li><strong>default_root_dir:</strong>  the root directory where the results are saved.</li>\n<li><strong>action_mm2str:</strong>  a dictionary to convert mm actions to strings.</li>\n<li><strong>action_explore2str:</strong>  a dictionary to convert explore actions to strings.</li>\n<li><strong>to_plot:</strong>  what to plot:\n\"all\": plot everything\n\"training_td_loss\": plot training td loss\n\"epsilons\": plot epsilons\n\"scores\": plot scores\n\"q_value_train\": plot q_values for training\n\"q_value_val\": plot q_values for validation\n\"q_value_test\": plot q_values for test</li>\n<li><strong>save_fig:</strong>  whether to save the figure or not</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">training_loss</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">epsilons</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">q_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">iteration_idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_iterations</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">total_maximum_episode_rewards</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">action_mm2str</span>,</span><span class=\"param\">\t<span class=\"n\">action_explore2str</span>,</span><span class=\"param\">\t<span class=\"n\">to_plot</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">save_fig</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.console": {"fullname": "agent.dqn.utils.console", "modulename": "agent.dqn.utils", "qualname": "console", "kind": "function", "doc": "<p>Print the dqn training to the console.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">training_loss</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">iteration_idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_iterations</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">total_maximum_episode_rewards</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.save_final_results": {"fullname": "agent.dqn.utils.save_final_results", "modulename": "agent.dqn.utils", "qualname": "save_final_results", "kind": "function", "doc": "<p>Save dqn train / val / test results.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>scores:</strong>  a dictionary of scores for train, validation, and test.</li>\n<li><strong>training_loss:</strong>  a dict of training losses for all, mm, and explore.</li>\n<li><strong>training_loss_explore:</strong>  a list of training losses for explore.</li>\n<li><strong>default_root_dir:</strong>  the root directory where the results are saved.</li>\n<li><strong>q_values:</strong>  a dictionary of q_values for train, validation, and test.</li>\n<li><strong>self:</strong>  the agent object.</li>\n<li><strong>save_the_agent:</strong>  whether to save the agent or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">training_loss</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">q_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"nb\">object</span>,</span><span class=\"param\">\t<span class=\"n\">save_the_agent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.find_non_masked_rows": {"fullname": "agent.dqn.utils.find_non_masked_rows", "modulename": "agent.dqn.utils", "qualname": "find_non_masked_rows", "kind": "function", "doc": "<p>Identifies rows that are not completely masked in each batch of a 3D tensor.</p>\n\n<p>This function considers a row as non-masked if it contains at least one non-zero\nelement. It processes each batch independently and returns the indices of non-masked\nrows for each batch.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask (torch.Tensor):</strong>  A 3D tensor of shape [batch_size, num_items, num_features],\ncontaining binary values (0s and 1s).\n<ul>\n<li>batch_size: number of batches</li>\n<li>num_items: number of items (rows) in each batch</li>\n<li>num_features: number of features for each item</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[torch.Tensor]: A list of 1D tensors, where each tensor contains the indices\n  of non-masked rows for the corresponding batch. The length of the list is equal\n  to the batch_size. Each tensor in the list has shape [num_non_masked_rows] and\n  dtype torch.long.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]],</span>\n<span class=\"gp\">... </span>    <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"gp\">... </span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">find_non_masked_rows</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">[tensor([0, 2]), tensor([1, 2])]</span>\n</code></pre>\n  </div>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <ul>\n  <li>A row is considered non-masked if it contains at least one non-zero element.</li>\n  <li>If a batch has all rows masked, the corresponding tensor in the output list\n  will be empty.</li>\n  <li>This function does not modify the input tensor.</li>\n  </ul>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the input tensor is not 3-dimensional.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.compute_loss_mm": {"fullname": "agent.dqn.utils.compute_loss_mm", "modulename": "agent.dqn.utils", "qualname": "compute_loss_mm", "kind": "function", "doc": "<p>Return the DQN td loss for the memory management policy.</p>\n\n<p>G_t   = r + gamma * v(s_{t+1})  if state != Terminal\n      = r                       otherwise</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch:</strong>  A dictionary of samples from the replay buffer.\nobs: np.ndarray,\nact: np.ndarray,\nrew: float,\nnext_obs: np.ndarray,\ndone: bool,</li>\n<li><strong>device:</strong>  cpu or cuda</li>\n<li><strong>dqn:</strong>  dqn model</li>\n<li><strong>dqn_target:</strong>  dqn target model</li>\n<li><strong>ddqn:</strong>  whether to use double dqn or not</li>\n<li><strong>gamma:</strong>  discount factor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss_mm: TD loss for memory management</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">batch</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">dqn_target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">ddqn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.compute_loss_explore": {"fullname": "agent.dqn.utils.compute_loss_explore", "modulename": "agent.dqn.utils", "qualname": "compute_loss_explore", "kind": "function", "doc": "<p>Return the DQN td loss for explore policy.</p>\n\n<p>G_t   = r + gamma * v(s_{t+1})  if state != Terminal\n      = r                       otherwise</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch:</strong>  A dictionary of samples from the replay buffer.\nobs: np.ndarray,\nacts: np.ndarray,\nrews: float,\nnext_obs: np.ndarray,\ndone: bool,</li>\n<li><strong>device:</strong>  cpu or cuda</li>\n<li><strong>dqn:</strong>  dqn model</li>\n<li><strong>dqn_target:</strong>  dqn target model</li>\n<li><strong>ddqn:</strong>  whether to use double dqn or not</li>\n<li><strong>gamma:</strong>  discount factor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss: TD loss for the explore policy</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">batch</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">dqn_target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">ddqn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.update_model": {"fullname": "agent.dqn.utils.update_model", "modulename": "agent.dqn.utils", "qualname": "update_model", "kind": "function", "doc": "<p>Update the model by gradient descent.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>replay_buffer:</strong>  replay buffer</li>\n<li><strong>optimizer:</strong>  optimizer</li>\n<li><strong>device:</strong>  cpu or cuda</li>\n<li><strong>dqn:</strong>  dqn model</li>\n<li><strong>dqn_target:</strong>  dqn target model</li>\n<li><strong>ddqn:</strong>  whether to use double dqn or not</li>\n<li><strong>gamma:</strong>  discount factor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss_mm, loss_explore, loss_combined: TD losses for memory management,\n      explore and combined</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">replay_buffer</span><span class=\"p\">:</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">dqn</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">ReplayBuffer</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">Adam</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">dqn_target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">ddqn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.select_action": {"fullname": "agent.dqn.utils.select_action", "modulename": "agent.dqn.utils", "qualname": "select_action", "kind": "function", "doc": "<p>Select action(s) from the input state, with epsilon-greedy policy.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>state:</strong>  This is the input to the neural network. Make sure that it's compatible\nwith the input shape of the neural network. It's very likely that this\nlooks like a list of quadruples.</li>\n<li><strong>greedy:</strong>  always pick greedy action if True</li>\n<li><strong>dqn:</strong>  dqn model</li>\n<li><strong>epsilon:</strong>  epsilon</li>\n<li><strong>policy_type:</strong>  \"mm\" or \"explore\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>selected_actions: dimension is [num_actions_taken]\n  q_values: dimension is [num_actions_taken, action_space_dim]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">greedy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">policy_type</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;mm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;explore&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.save_validation": {"fullname": "agent.dqn.utils.save_validation", "modulename": "agent.dqn.utils", "qualname": "save_validation", "kind": "function", "doc": "<p>Keep the best validation model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>policy:</strong>  \"mm\", \"explore\", or None.</li>\n<li><strong>scores_temp:</strong>  a list of validation scores for the current validation episode.</li>\n<li><strong>scores:</strong>  a dictionary of scores for train, validation, and test.</li>\n<li><strong>default_root_dir:</strong>  the root directory where the results are saved.</li>\n<li><strong>num_episodes:</strong>  number of episodes run so far</li>\n<li><strong>validation_interval:</strong>  the interval to validate the model.</li>\n<li><strong>val_file_names:</strong>  a list of dirnames for the validation models.</li>\n<li><strong>dqn:</strong>  the dqn model.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scores_temp</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_episodes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">validation_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">val_file_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.save_states_q_values_actions": {"fullname": "agent.dqn.utils.save_states_q_values_actions", "modulename": "agent.dqn.utils", "qualname": "save_states_q_values_actions", "kind": "function", "doc": "<p>Save states, q_values, and actions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>states:</strong>  a list of states.</li>\n<li><strong>q_values:</strong>  a list of q_values.</li>\n<li><strong>actions:</strong>  a list of actions.</li>\n<li><strong>default_root_dir:</strong>  the root directory where the results are saved.</li>\n<li><strong>val_or_test:</strong>  \"val\" or \"test\"</li>\n<li><strong>num_episodes:</strong>  the current validation episode.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">states</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">q_values</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">actions</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">val_or_test</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_episodes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.target_hard_update": {"fullname": "agent.dqn.utils.target_hard_update", "modulename": "agent.dqn.utils", "qualname": "target_hard_update", "kind": "function", "doc": "<p>Hard update: update target with local.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dqn:</strong>  dqn model</li>\n<li><strong>dqn_target:</strong>  dqn target model</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dqn</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>,</span><span class=\"param\">\t<span class=\"n\">dqn_target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.dqn.utils.update_epsilon": {"fullname": "agent.dqn.utils.update_epsilon", "modulename": "agent.dqn.utils", "qualname": "update_epsilon", "kind": "function", "doc": "<p>Linearly decrease epsilon</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>epsilon:</strong>  current epsilon</li>\n<li><strong>max_epsilon:</strong>  initial epsilon</li>\n<li><strong>min_epsilon:</strong>  minimum epsilon</li>\n<li><strong>epsilon_decay_until:</strong>  the last iteration index to decay epsilon</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>epsilon: updated epsilon</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">max_epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">min_epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon_decay_until</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "agent.handcrafted": {"fullname": "agent.handcrafted", "modulename": "agent.handcrafted", "kind": "module", "doc": "<p>Agent that uses a GNN for its DQN, for the RoomEnv2 environment.</p>\n"}, "agent.handcrafted.HandcraftedAgent": {"fullname": "agent.handcrafted.HandcraftedAgent", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent", "kind": "class", "doc": "<p>Handcrafted agent interacting with environment.</p>\n\n<p>This agent explores the roooms, i.e., KGs. The exploration can be uniform-random,\nor just avoiding walls.</p>\n"}, "agent.handcrafted.HandcraftedAgent.__init__": {"fullname": "agent.handcrafted.HandcraftedAgent.__init__", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.__init__", "kind": "function", "doc": "<p>Initialize the agent.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>env_str:</strong>  This has to be \"room_env:RoomEnv-v2\"</li>\n<li><strong>env_config:</strong>  The configuration of the environment.</li>\n<li><strong>mm_policy:</strong>  memory management policy. Choose one of \"random\", \"episodic\",\n\"semantic\", or \"handcrafted\"</li>\n<li><strong>qa_function:</strong>  The question answering policy. Choose one of\n\"episodic_semantic\", \"episodic\", \"semantic\", or \"random\"</li>\n<li><strong>explore_policy:</strong>  The room exploration policy. Choose one of \"random\",\nor \"avoid_walls\"</li>\n<li><strong>num_samples_for_results:</strong>  The number of samples to validate / test the agent.</li>\n<li><strong>capacity:</strong>  The capacity of each human-like memory systems.</li>\n<li><strong>pretrain_semantic:</strong>  Whether or not to pretrain the semantic memory system.</li>\n<li><strong>semantic_decay_factor:</strong>  The decay factor for the semantic memory system.</li>\n<li><strong>default_root_dir:</strong>  default root directory to store the results.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">env_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;room_env:RoomEnv-v2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">env_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;question_prob&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;seed&#39;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"s1\">&#39;terminates_at&#39;</span><span class=\"p\">:</span> <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"s1\">&#39;randomize_observations&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;objects&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;make_everything_static&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rewards&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;correct&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wrong&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;partial&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">},</span> <span class=\"s1\">&#39;num_total_questions&#39;</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">&#39;question_interval&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;room_size&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;xxs&#39;</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">mm_policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episodic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;semantic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;handcrafted&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;random&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">qa_function</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;latest_strongest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;latest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;strongest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;random&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;latest_strongest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">explore_policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;avoid_walls&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;avoid_walls&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_samples_for_results</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">capacity</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;long&#39;</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s1\">&#39;short&#39;</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">pretrain_semantic</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;include_walls&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;exclude_walls&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">semantic_decay_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">default_root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./training-results/&#39;</span></span>)</span>"}, "agent.handcrafted.HandcraftedAgent.env_str": {"fullname": "agent.handcrafted.HandcraftedAgent.env_str", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.env_str", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.env_config": {"fullname": "agent.handcrafted.HandcraftedAgent.env_config", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.env_config", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"fullname": "agent.handcrafted.HandcraftedAgent.mm_policy", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.mm_policy", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.qa_function": {"fullname": "agent.handcrafted.HandcraftedAgent.qa_function", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.qa_function", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"fullname": "agent.handcrafted.HandcraftedAgent.explore_policy", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.explore_policy", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"fullname": "agent.handcrafted.HandcraftedAgent.num_samples_for_results", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.num_samples_for_results", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.capacity": {"fullname": "agent.handcrafted.HandcraftedAgent.capacity", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.capacity", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"fullname": "agent.handcrafted.HandcraftedAgent.pretrain_semantic", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.pretrain_semantic", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"fullname": "agent.handcrafted.HandcraftedAgent.semantic_decay_factor", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.semantic_decay_factor", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.env": {"fullname": "agent.handcrafted.HandcraftedAgent.env", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.env", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"fullname": "agent.handcrafted.HandcraftedAgent.default_root_dir", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.default_root_dir", "kind": "variable", "doc": "<p></p>\n"}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"fullname": "agent.handcrafted.HandcraftedAgent.remove_results_from_disk", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.remove_results_from_disk", "kind": "function", "doc": "<p>Remove the results from the disk.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"fullname": "agent.handcrafted.HandcraftedAgent.init_memory_systems", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.init_memory_systems", "kind": "function", "doc": "<p>Initialize the agent's memory systems. This has nothing to do with the\nreplay buffer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reset_semantic_decay:</strong>  whether to reset the semantic memory system's decay</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reset_semantic_decay</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.handcrafted.HandcraftedAgent.test": {"fullname": "agent.handcrafted.HandcraftedAgent.test", "modulename": "agent.handcrafted", "qualname": "HandcraftedAgent.test", "kind": "function", "doc": "<p>Test the agent. There is no training for this agent, since it is\nhandcrafted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.policy": {"fullname": "agent.policy", "modulename": "agent.policy", "kind": "module", "doc": "<p>Handcrafted / trained policies.</p>\n\n<p>The trained neural network policies are not implemented yet.</p>\n"}, "agent.policy.encode_observation": {"fullname": "agent.policy.encode_observation", "modulename": "agent.policy", "qualname": "encode_observation", "kind": "function", "doc": "<p>Non RL policy of encoding an observation into a short-term memory.</p>\n\n<p>At the moment, observation is the same as short-term memory, since this is made for\nRoomEnv-v2.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>MemorySystems</li>\n<li><strong>obs:</strong>  observation as a quadruple: [head, relation, tail, int]</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span>,</span><span class=\"param\">\t<span class=\"n\">obs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.policy.encode_all_observations": {"fullname": "agent.policy.encode_all_observations", "modulename": "agent.policy", "qualname": "encode_all_observations", "kind": "function", "doc": "<p>Non RL policy of encoding all observations into short-term memories.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>MemorySystems</li>\n<li><strong>obs_multiple:</strong>  a list of observations</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span>,</span><span class=\"param\">\t<span class=\"n\">obs_multiple</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.policy.find_agent_location": {"fullname": "agent.policy.find_agent_location", "modulename": "agent.policy", "qualname": "find_agent_location", "kind": "function", "doc": "<p>Find the current location of the agent. This uses the agent's short-term memory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>MemorySystems</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>agent_current_location: str | None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.policy.explore": {"fullname": "agent.policy.explore", "modulename": "agent.policy", "qualname": "explore", "kind": "function", "doc": "<p>Explore the room (sub-graph).</p>\n\n<p>\"random\" policy: randomly choose an action.\n\"avoid_walls\" policy: avoid the walls. This takes into account the agent's current\n    location (from episodic) and the memories about the map (from semantic and\n    episodic)</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>memory_systems:</strong>  MemorySystems</li>\n<li><strong>policy:</strong>  \"random\" or \"avoid_walls\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>action: The exploration action to take.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span>,</span><span class=\"param\">\t<span class=\"n\">policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;avoid_walls&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "agent.policy.manage_memory": {"fullname": "agent.policy.manage_memory", "modulename": "agent.policy", "qualname": "manage_memory", "kind": "function", "doc": "<p>Non RL memory management policy. This function directly manages the long-term\nmemory. It tries to balance the number of episodic and semantic memories. Balancing\nis done by trying to keep the equal number of timestamps and strengths.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>MemorySystems</li>\n<li><strong>policy:</strong>  \"episodic\", \"semantic\", \"random\", \"forget\", or \"handcrafted\"</li>\n<li><strong>mem_short:</strong>  a short-term memory to be moved into a long-term memory.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span>,</span><span class=\"param\">\t<span class=\"n\">policy</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;episodic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;semantic&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;random&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;forget&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;handcrafted&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mem_short</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.policy.answer_question": {"fullname": "agent.policy.answer_question", "modulename": "agent.policy", "qualname": "answer_question", "kind": "function", "doc": "<p>Use the memory systems to answer a question from RoomEnv-v2. It assumes that\nthe question is a one-hop query. As we closely follow the cognitive science,\nwe only use the working memory answer the questions. The working memory is\nshort-term + (partial) long-term memory. The long-term memory used is partial,\nsince it can be too big.</p>\n\n<p>Short-term memory is first used to look for the latest memory and then the episodic\nmemory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>MemorySystems:</strong>  MemorySystems</li>\n<li><strong>qa_function:</strong>  \"latest_strongest\", \"latest\", \"strongest\", or \"random\"</li>\n<li><strong>question:</strong>  A quadruple given by RoomEnv-v2, e.g., [laptop, atlocation, ?,\ncurrent_time]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pred: prediction</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_systems</span><span class=\"p\">:</span> <span class=\"n\">humemai</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">MemorySystems</span>,</span><span class=\"param\">\t<span class=\"n\">qa_function</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;latest_strongest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;latest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;strongest&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;random&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "agent.utils": {"fullname": "agent.utils", "modulename": "agent.utils", "kind": "module", "doc": "<p>Utility functions.</p>\n"}, "agent.utils.seed_everything": {"fullname": "agent.utils.seed_everything", "modulename": "agent.utils", "qualname": "seed_everything", "kind": "function", "doc": "<p>Seed every randomness to seed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.utils.read_json": {"fullname": "agent.utils.read_json", "modulename": "agent.utils", "qualname": "read_json", "kind": "function", "doc": "<p>Read json</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "agent.utils.write_json": {"fullname": "agent.utils.write_json", "modulename": "agent.utils", "qualname": "write_json", "kind": "function", "doc": "<p>Write json</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.utils.read_yaml": {"fullname": "agent.utils.read_yaml", "modulename": "agent.utils", "qualname": "read_yaml", "kind": "function", "doc": "<p>Read yaml.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "agent.utils.write_yaml": {"fullname": "agent.utils.write_yaml", "modulename": "agent.utils", "qualname": "write_yaml", "kind": "function", "doc": "<p>write yaml.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.utils.write_pickle": {"fullname": "agent.utils.write_pickle", "modulename": "agent.utils", "qualname": "write_pickle", "kind": "function", "doc": "<p>Read pickle</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">to_pickle</span><span class=\"p\">:</span> <span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.utils.read_pickle": {"fullname": "agent.utils.read_pickle", "modulename": "agent.utils", "qualname": "read_pickle", "kind": "function", "doc": "<p>Read pickle</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.utils.write_csv": {"fullname": "agent.utils.write_csv", "modulename": "agent.utils", "qualname": "write_csv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "agent.utils.read_data": {"fullname": "agent.utils.read_data", "modulename": "agent.utils", "qualname": "read_data", "kind": "function", "doc": "<p>Read train, val, test spilts.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data_path:</strong>  path to data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>data: {'train': list of training obs,\n      'val': list of val obs,\n      'test': list of test obs}</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "agent.utils.load_questions": {"fullname": "agent.utils.load_questions", "modulename": "agent.utils", "qualname": "load_questions", "kind": "function", "doc": "<p>Load premade questions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>path:</strong>  path to the question json file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "agent.utils.argmax": {"fullname": "agent.utils.argmax", "modulename": "agent.utils", "qualname": "argmax", "kind": "function", "doc": "<p>argmax</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "agent.utils.get_duplicate_dicts": {"fullname": "agent.utils.get_duplicate_dicts", "modulename": "agent.utils", "qualname": "get_duplicate_dicts", "kind": "function", "doc": "<p>Find dictionaries in a list that match a search dictionary.</p>\n\n<p>This function searches for dictionaries in a target list that contain all key-value\npairs specified in the search dictionary. It returns a list of all matching\ndictionaries.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>search (dict):</strong>  The dictionary containing key-value pairs to search for.</li>\n<li><strong>target (list):</strong>  The list of dictionaries to search within.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of dictionaries from the target list that match the search\n      dictionary. If no matches are found, an empty list is returned.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_duplicate_dicts</span><span class=\"p\">(</span><span class=\"n\">search</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"go\">[{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3}, {&quot;a&quot;: 1, &quot;b&quot;: 2}]</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">search</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "agent.utils.list_duplicates_of": {"fullname": "agent.utils.list_duplicates_of", "modulename": "agent.utils", "qualname": "list_duplicates_of", "kind": "function", "doc": "<p>Find all indices of an item in a list.</p>\n\n<p>This function returns a list of indices where the specified item appears in the\nsequence.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>seq (list):</strong>  The list in which to search for duplicates.</li>\n<li><strong>item (any):</strong>  The item to search for in the list.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of indices where the item appears in the sequence. If the item is\n      not found, the list is empty.</p>\n</blockquote>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">seq</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">list_duplicates_of</span><span class=\"p\">(</span><span class=\"n\">seq</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span>\n<span class=\"go\">[1, 3, 5]</span>\n</code></pre>\n  </div>\n  \n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">list_duplicates_of</span><span class=\"p\">(</span><span class=\"n\">seq</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span>\n<span class=\"go\">[]</span>\n</code></pre>\n  </div>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seq</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "agent.utils.is_running_notebook": {"fullname": "agent.utils.is_running_notebook", "modulename": "agent.utils", "qualname": "is_running_notebook", "kind": "function", "doc": "<p>See if the code is running in a notebook or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "agent.utils.positional_encoding": {"fullname": "agent.utils.positional_encoding", "modulename": "agent.utils", "qualname": "positional_encoding", "kind": "function", "doc": "<p>Generate sinusoidal positional encoding.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>positions (int):</strong>  The number of positions in the sequence.</li>\n<li><strong>dimensions (int):</strong>  The dimension of the embedding vectors.</li>\n<li><strong>scaling_factor (float):</strong>  The scaling factor used in the sinusoidal functions.</li>\n<li><strong>return_tensor (bool):</strong>  If True, return a PyTorch tensor; otherwise, return a\nNumPy array.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Union[np.ndarray, torch.Tensor]: A positional encoding in the form of either a\n      NumPy array or a PyTorch tensor.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">scaling_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">10000.0</span>,</span><span class=\"param\">\t<span class=\"n\">return_tensor</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"agent": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "agent.dqn.dqn.DQNAgent": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 71}, "agent.dqn.dqn.DQNAgent.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 1190, "bases": 0, "doc": 436}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.train_seed": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.test_seed": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.env_str": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.env_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.qa_function": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.validation_interval": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.capacity": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.env": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.device": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.ddqn": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.val_file_names": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.is_notebook": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.num_iterations": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.batch_size": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.epsilon": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.gamma": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.learning_rate": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.warm_start": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.explore_policy": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.mm_policy": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.scale_reward": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.dqn_params": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.dqn": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.dqn_target": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.optimizer": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.q_values": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "agent.dqn.dqn.DQNAgent.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "agent.dqn.dqn.DQNAgent.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 57}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 34}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "agent.dqn.dqn.DQNAgent.train": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 63}, "agent.dqn.dqn.DQNAgent.validate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "agent.dqn.dqn.DQNAgent.test": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 23}, "agent.dqn.dqn.DQNAgent.plot_results": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 43}, "agent.dqn.nn": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "agent.dqn.nn.gnn.GNN": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 260}, "agent.dqn.nn.gnn.GNN.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 276, "bases": 0, "doc": 112}, "agent.dqn.nn.gnn.GNN.entities": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.relations": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.gcn_type": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.mlp_params": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.device": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.relu": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.drop": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.gnn.GNN.process_batch": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 195}, "agent.dqn.nn.gnn.GNN.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 99}, "agent.dqn.nn.mlp": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "agent.dqn.nn.mlp.MLP": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 88}, "agent.dqn.nn.mlp.MLP.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 85}, "agent.dqn.nn.mlp.MLP.device": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.input_size": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.hidden_size": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.n_actions": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.mlp.MLP.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 53}, "agent.dqn.nn.stare_conv": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 109}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 74}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 173}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 47}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 46}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 64}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 86}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 272, "bases": 0, "doc": 140}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 47}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 46}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 68}, "agent.dqn.nn.utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "agent.dqn.nn.utils.maybe_num_nodes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.softmax": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 126}, "agent.dqn.nn.utils.com_mult": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.conj": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.cconv": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.ccorr": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.rotate": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "agent.dqn.nn.utils.scatter_": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 173}, "agent.dqn.nn.utils.extract_entities_and_relations": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 51}, "agent.dqn.nn.utils.process_graph": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 333}, "agent.dqn.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "agent.dqn.utils.ReplayBuffer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 775}, "agent.dqn.utils.ReplayBuffer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 98}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.done_buf": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.dqn.utils.ReplayBuffer.store": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 117, "bases": 0, "doc": 72}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 54}, "agent.dqn.utils.plot_results": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 226, "bases": 0, "doc": 226}, "agent.dqn.utils.console": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 10}, "agent.dqn.utils.save_final_results": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 146, "bases": 0, "doc": 122}, "agent.dqn.utils.find_non_masked_rows": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 484}, "agent.dqn.utils.compute_loss_mm": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 124}, "agent.dqn.utils.compute_loss_explore": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 122}, "agent.dqn.utils.update_model": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 188, "bases": 0, "doc": 96}, "agent.dqn.utils.select_action": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 133, "bases": 0, "doc": 121}, "agent.dqn.utils.save_validation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 123}, "agent.dqn.utils.save_states_q_values_actions": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 86}, "agent.dqn.utils.target_hard_update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 32}, "agent.dqn.utils.update_epsilon": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 61}, "agent.handcrafted": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "agent.handcrafted.HandcraftedAgent": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "agent.handcrafted.HandcraftedAgent.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 573, "bases": 0, "doc": 175}, "agent.handcrafted.HandcraftedAgent.env_str": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.env_config": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.qa_function": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.capacity": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.env": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 41}, "agent.handcrafted.HandcraftedAgent.test": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "agent.policy": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "agent.policy.encode_observation": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 59}, "agent.policy.encode_all_observations": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 34}, "agent.policy.find_agent_location": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 43}, "agent.policy.explore": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 85}, "agent.policy.manage_memory": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 104, "bases": 0, "doc": 82}, "agent.policy.answer_question": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 139}, "agent.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "agent.utils.seed_everything": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 7}, "agent.utils.read_json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 4}, "agent.utils.write_json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 4}, "agent.utils.read_yaml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 5}, "agent.utils.write_yaml": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 5}, "agent.utils.write_pickle": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 4}, "agent.utils.read_pickle": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 4}, "agent.utils.write_csv": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "agent.utils.read_data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 54}, "agent.utils.load_questions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 25}, "agent.utils.argmax": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "agent.utils.get_duplicate_dicts": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 358}, "agent.utils.list_duplicates_of": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 276}, "agent.utils.is_running_notebook": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "agent.utils.positional_encoding": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 109}}, "length": 193, "save": true}, "index": {"qualname": {"root": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.capacity": {"tf": 1}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1}, "agent.dqn.dqn.DQNAgent.device": {"tf": 1}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}, "agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.gamma": {"tf": 1}, "agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}}, "df": 54}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}, "m": {"docs": {"agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"agent.utils.read_data": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"agent.dqn.nn.utils.rotate": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 11}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}}, "df": 2}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.read_data": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 26}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}}, "df": 6}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.seed_everything": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}}, "df": 2}}}, "j": {"docs": {"agent.dqn.nn.utils.conj": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.console": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"agent.dqn.nn.utils.com_mult": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.nn.utils.cconv": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.ccorr": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"agent.utils.write_csv": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3, "a": {"docs": {"agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 1}}, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {"agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}}, "df": 1}}}}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}}, "df": 13}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.com_mult": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 6}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.gamma": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}}, "df": 21}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.find_agent_location": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_json": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 5, "s": {"docs": {"agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.find_agent_location": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.policy.encode_all_observations": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.utils.argmax": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.encode_observation": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.policy.encode_all_observations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}}, "df": 2}}}}}}, "fullname": {"root": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent": {"tf": 1}, "agent.dqn": {"tf": 1}, "agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.capacity": {"tf": 1}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1}, "agent.dqn.dqn.DQNAgent.device": {"tf": 1}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}, "agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.gamma": {"tf": 1}, "agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn": {"tf": 1}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.conj": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}, "agent.dqn.nn.utils.rotate": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}, "agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.argmax": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 193}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 5, "s": {"docs": {"agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.policy.encode_all_observations": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.utils.argmax": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn": {"tf": 1}, "agent.dqn.dqn": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.env_str": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.capacity": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.device": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.gamma": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.q_values": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.nn": {"tf": 1}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.conj": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}, "agent.dqn.nn.utils.rotate": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 152, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.capacity": {"tf": 1}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1}, "agent.dqn.dqn.DQNAgent.device": {"tf": 1}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}, "agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.gamma": {"tf": 1}, "agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}}, "df": 54}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}, "m": {"docs": {"agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"agent.utils.read_data": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"agent.dqn.nn.utils.rotate": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 11}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}}, "df": 2}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.read_data": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}}, "df": 1}, "e": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 27, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 26}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent.env_str": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}}, "df": 6}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.seed_everything": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}}, "df": 2}}}, "v": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 27}, "j": {"docs": {"agent.dqn.nn.utils.conj": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.console": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"agent.dqn.nn.utils.com_mult": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.nn.utils.cconv": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.ccorr": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"agent.utils.write_csv": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3, "a": {"docs": {"agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 1}}, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}, "n": {"docs": {"agent.dqn.nn": {"tf": 1}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.conj": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}, "agent.dqn.nn.utils.rotate": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 72}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.q_values": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 11}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {"agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}}, "df": 1}}}}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}}, "df": 14}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.com_mult": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.conj": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}, "agent.dqn.nn.utils.rotate": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.utils": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}, "agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.argmax": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 51}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.gamma": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}}, "df": 22}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.find_agent_location": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_json": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.encode_observation": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.policy.encode_all_observations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.handcrafted": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 17, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}}, "df": 2}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"0": {"1": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 3.605551275463989}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 6}, "1": {"0": {"0": {"0": {"0": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 2}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 1}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "2": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "5": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.6457513110645907}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}}, "df": 5}, "2": {"0": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "3": {"2": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 2}, "9": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 10.099504938362077}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 4.242640687119285}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 2}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 8.12403840463596}, "agent.policy.explore": {"tf": 2}, "agent.policy.manage_memory": {"tf": 3.1622776601683795}, "agent.policy.answer_question": {"tf": 2.8284271247461903}}, "df": 10}, "docs": {}, "df": 0}, "4": {"2": {"docs": {"agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "8": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3}, "9": {"9": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 29.29163703175362}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.step": {"tf": 9.38083151964686}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 4.47213595499958}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.train": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 6.324555320336759}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.test": {"tf": 5.5677643628300215}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 6.48074069840786}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 14.177446878757825}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 9.433981132056603}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 7.615773105863909}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 8.366600265340756}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 5.291502622129181}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 7.810249675906654}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 3.4641016151377544}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 9.797958971132712}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 6.324555320336759}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 6.557438524302}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 8.717797887081348}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 10.295630140987}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 14.696938456699069}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 6}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 5.656854249492381}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 8.18535277187245}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 4.242640687119285}, "agent.dqn.nn.utils.softmax": {"tf": 5.291502622129181}, "agent.dqn.nn.utils.com_mult": {"tf": 3.7416573867739413}, "agent.dqn.nn.utils.conj": {"tf": 3.1622776601683795}, "agent.dqn.nn.utils.cconv": {"tf": 3.7416573867739413}, "agent.dqn.nn.utils.ccorr": {"tf": 3.7416573867739413}, "agent.dqn.nn.utils.rotate": {"tf": 3.7416573867739413}, "agent.dqn.nn.utils.scatter_": {"tf": 5.656854249492381}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 6.082762530298219}, "agent.dqn.nn.utils.process_graph": {"tf": 10}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 5.0990195135927845}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 9.591663046625438}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 5.0990195135927845}, "agent.dqn.utils.plot_results": {"tf": 13.19090595827292}, "agent.dqn.utils.console": {"tf": 7.745966692414834}, "agent.dqn.utils.save_final_results": {"tf": 10.723805294763608}, "agent.dqn.utils.find_non_masked_rows": {"tf": 5.385164807134504}, "agent.dqn.utils.compute_loss_mm": {"tf": 9.899494936611665}, "agent.dqn.utils.compute_loss_explore": {"tf": 9.899494936611665}, "agent.dqn.utils.update_model": {"tf": 12.328828005937952}, "agent.dqn.utils.select_action": {"tf": 10.295630140987}, "agent.dqn.utils.save_validation": {"tf": 9.327379053088816}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 9.539392014169456}, "agent.dqn.utils.target_hard_update": {"tf": 7.615773105863909}, "agent.dqn.utils.update_epsilon": {"tf": 6.6332495807108}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 20.149441679609886}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 3.4641016151377544}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 5.0990195135927845}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 3.1622776601683795}, "agent.policy.encode_observation": {"tf": 6.6332495807108}, "agent.policy.encode_all_observations": {"tf": 6.855654600401044}, "agent.policy.find_agent_location": {"tf": 5.385164807134504}, "agent.policy.explore": {"tf": 6.928203230275509}, "agent.policy.manage_memory": {"tf": 8.831760866327848}, "agent.policy.answer_question": {"tf": 9.539392014169456}, "agent.utils.seed_everything": {"tf": 4}, "agent.utils.read_json": {"tf": 4}, "agent.utils.write_json": {"tf": 4.898979485566356}, "agent.utils.read_yaml": {"tf": 4}, "agent.utils.write_yaml": {"tf": 4.898979485566356}, "agent.utils.write_pickle": {"tf": 4.69041575982343}, "agent.utils.read_pickle": {"tf": 3.7416573867739413}, "agent.utils.write_csv": {"tf": 4.898979485566356}, "agent.utils.read_data": {"tf": 4}, "agent.utils.load_questions": {"tf": 4}, "agent.utils.argmax": {"tf": 3.1622776601683795}, "agent.utils.get_duplicate_dicts": {"tf": 4.898979485566356}, "agent.utils.list_duplicates_of": {"tf": 6.164414002968976}, "agent.utils.is_running_notebook": {"tf": 3}, "agent.utils.positional_encoding": {"tf": 8.602325267042627}}, "df": 78, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 2, ":": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 2}}, "df": 3, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}, "e": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}}, "df": 4, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2.449489742783178}, "agent.dqn.utils.save_final_results": {"tf": 2.23606797749979}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}, "agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}}, "df": 34, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 29}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 6}}}}}}}, "r": {"docs": {"agent.dqn.nn.utils.rotate": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 5, "u": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}}, "df": 1}}, "v": {"2": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {"agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.23606797749979}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 13, "p": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 2.23606797749979}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}}, "df": 33}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.argmax": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 3, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 3.1622776601683795}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.console": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}, "agent.utils.seed_everything": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}}, "df": 4}}}, "b": {"docs": {"agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 12}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.policy.explore": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.23606797749979}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.6457513110645907}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 3.3166247903554}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 19}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.6457513110645907}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 3.3166247903554}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_model": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 23}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 8}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 4}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.23606797749979}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 2}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 20}}, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}}, "df": 9}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.utils.read_data": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.23606797749979}, "agent.dqn.dqn.DQNAgent.step": {"tf": 2}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 2}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 15}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}, "e": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}}, "df": 7}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 2}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 2}, "agent.dqn.utils.compute_loss_explore": {"tf": 2}, "agent.dqn.utils.update_model": {"tf": 2}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.target_hard_update": {"tf": 2}}, "df": 6, "s": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.encode_all_observations": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.encode_all_observations": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 2.6457513110645907}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 2}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 2.23606797749979}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 20}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "t": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.utils.write_json": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}, "agent.utils.write_csv": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.test": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_pickle": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}}, "h": {"docs": {"agent.dqn.nn.utils.rotate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {"agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.utils.com_mult": {"tf": 1}, "agent.dqn.nn.utils.conj": {"tf": 1}, "agent.dqn.nn.utils.cconv": {"tf": 1}, "agent.dqn.nn.utils.ccorr": {"tf": 1}}, "df": 5, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.utils.update_model": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 2.449489742783178}}, "df": 3}}}}, "m": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {"agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 2, "x": {"docs": {}, "df": 0, "s": {"docs": {"agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 1}}}, "j": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.console": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"0": {"0": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}}, "df": 1}, "1": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}, "7": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 5.0990195135927845}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3.4641016151377544}}, "df": 4, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}, "1": {"0": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}}, "df": 1}, "docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.dqn.utils.ReplayBuffer": {"tf": 5.0990195135927845}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2.8284271247461903}, "agent.utils.get_duplicate_dicts": {"tf": 2.449489742783178}, "agent.utils.list_duplicates_of": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}, "2": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 3}, "agent.dqn.utils.ReplayBuffer": {"tf": 4.47213595499958}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 2.449489742783178}, "agent.utils.list_duplicates_of": {"tf": 2}}, "df": 7}, "3": {"9": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 10.488088481701515}}, "df": 1}, "docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.6457513110645907}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 6, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1}}, "4": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 2}, "5": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 2}, "6": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}}, "df": 1}, "7": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}}, "df": 2}, "9": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}}, "df": 1}, "docs": {"agent": {"tf": 1.7320508075688772}, "agent.dqn": {"tf": 1.7320508075688772}, "agent.dqn.dqn": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent": {"tf": 3.4641016151377544}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 11.661903789690601}, "agent.dqn.dqn.DQNAgent.default_root_dir": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.train_seed": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.test_seed": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.env_str": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.env_config": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.qa_function": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.num_samples_for_results": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.validation_interval": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.capacity": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.pretrain_semantic": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.semantic_decay_factor": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.env": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.device": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.intrinsic_explore_reward": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.ddqn": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.val_file_names": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.is_notebook": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.num_iterations": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.plotting_interval": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.replay_buffer_size": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.batch_size": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.epsilon": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.max_epsilon": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.min_epsilon": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.epsilon_decay_until": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.target_update_interval": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.gamma": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.learning_rate": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.warm_start": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.explore_policy": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.mm_policy": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.scale_reward": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.action_mm2str": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.action_mm2int": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.action_explore2str": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.action_explore2int": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.dqn_params": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.dqn": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.dqn_target": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.optimizer": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.q_values": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.step": {"tf": 4.58257569495584}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 4.58257569495584}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 4.69041575982343}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.test": {"tf": 3.7416573867739413}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 3.605551275463989}, "agent.dqn.nn": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn": {"tf": 2}, "agent.dqn.nn.gnn.GNN": {"tf": 9.219544457292887}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 6.48074069840786}, "agent.dqn.nn.gnn.GNN.entities": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.relations": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.gcn_layer_params": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.gcn_type": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.mlp_params": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.rotational_for_relation": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.device": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.embedding_dim": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.entity_to_idx": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.relation_to_idx": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.entity_embeddings": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.relu_between_gcn_layers": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.dropout_between_gcn_layers": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.relu": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.drop": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.mlp_mm": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.mlp_explore": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 6}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 5.291502622129181}, "agent.dqn.nn.mlp": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP": {"tf": 6.244997998398398}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 6.244997998398398}, "agent.dqn.nn.mlp.MLP.device": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.input_size": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.hidden_size": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.num_hidden_layers": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.n_actions": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.dueling_dqn": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.advantage_layer": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 4.795831523312719}, "agent.dqn.nn.stare_conv": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 6.928203230275509}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 5.830951894845301}, "agent.dqn.nn.stare_conv.StarEConvLayer.in_channels": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.out_channels": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.num_rels": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.device": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_loop": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_in": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_out": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_rel": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.w_q": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_rel": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.loop_ent": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.drop": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.bn": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.triple_qual_weight": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 7.483314773547883}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 5.291502622129181}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 5.291502622129181}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 6.164414002968976}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 6.928203230275509}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 8.602325267042627}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 5.291502622129181}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 5.291502622129181}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 6.164414002968976}, "agent.dqn.nn.utils": {"tf": 2}, "agent.dqn.nn.utils.maybe_num_nodes": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.softmax": {"tf": 7.0710678118654755}, "agent.dqn.nn.utils.com_mult": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.conj": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.cconv": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.ccorr": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.rotate": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.scatter_": {"tf": 8.831760866327848}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 4.795831523312719}, "agent.dqn.nn.utils.process_graph": {"tf": 10.816653826391969}, "agent.dqn.utils": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 15.652475842498529}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 6.4031242374328485}, "agent.dqn.utils.ReplayBuffer.obs_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.next_obs_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.acts_explore_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.acts_mm_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.rews_explore_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.rews_mm_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.done_buf": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 6.082762530298219}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 3.3166247903554}, "agent.dqn.utils.plot_results": {"tf": 8.602325267042627}, "agent.dqn.utils.console": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_final_results": {"tf": 6.782329983125268}, "agent.dqn.utils.find_non_masked_rows": {"tf": 15.811388300841896}, "agent.dqn.utils.compute_loss_mm": {"tf": 6.855654600401044}, "agent.dqn.utils.compute_loss_explore": {"tf": 6.855654600401044}, "agent.dqn.utils.update_model": {"tf": 6.708203932499369}, "agent.dqn.utils.select_action": {"tf": 6.244997998398398}, "agent.dqn.utils.save_validation": {"tf": 6.928203230275509}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 6.244997998398398}, "agent.dqn.utils.target_hard_update": {"tf": 4.123105625617661}, "agent.dqn.utils.update_epsilon": {"tf": 5.656854249492381}, "agent.handcrafted": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent": {"tf": 2.449489742783178}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 7.745966692414834}, "agent.handcrafted.HandcraftedAgent.env_str": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.env_config": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.mm_policy": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.qa_function": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.explore_policy": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.num_samples_for_results": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.capacity": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.pretrain_semantic": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.semantic_decay_factor": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.env": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.default_root_dir": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 3.605551275463989}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1.7320508075688772}, "agent.policy": {"tf": 2.6457513110645907}, "agent.policy.encode_observation": {"tf": 4.242640687119285}, "agent.policy.encode_all_observations": {"tf": 3.872983346207417}, "agent.policy.find_agent_location": {"tf": 4.47213595499958}, "agent.policy.explore": {"tf": 5.5677643628300215}, "agent.policy.manage_memory": {"tf": 4.58257569495584}, "agent.policy.answer_question": {"tf": 5.916079783099616}, "agent.utils": {"tf": 1.7320508075688772}, "agent.utils.seed_everything": {"tf": 1.4142135623730951}, "agent.utils.read_json": {"tf": 1.4142135623730951}, "agent.utils.write_json": {"tf": 1.4142135623730951}, "agent.utils.read_yaml": {"tf": 1.7320508075688772}, "agent.utils.write_yaml": {"tf": 1.7320508075688772}, "agent.utils.write_pickle": {"tf": 1.4142135623730951}, "agent.utils.read_pickle": {"tf": 1.4142135623730951}, "agent.utils.write_csv": {"tf": 1.7320508075688772}, "agent.utils.read_data": {"tf": 5.0990195135927845}, "agent.utils.load_questions": {"tf": 3.7416573867739413}, "agent.utils.argmax": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 14.177446878757825}, "agent.utils.list_duplicates_of": {"tf": 12.922847983320086}, "agent.utils.is_running_notebook": {"tf": 1.7320508075688772}, "agent.utils.positional_encoding": {"tf": 6.48074069840786}}, "df": 193, "a": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.6457513110645907}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.449489742783178}, "agent.dqn.utils.save_final_results": {"tf": 2}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2.449489742783178}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}, "agent.handcrafted": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1.7320508075688772}, "agent.utils.get_duplicate_dicts": {"tf": 3.3166247903554}, "agent.utils.list_duplicates_of": {"tf": 1.7320508075688772}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 2.23606797749979}}, "df": 35, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.handcrafted": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 1}}, "df": 18}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 4}}}}}}}}}}, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 7, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.policy.explore": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}}, "df": 21}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 12}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 51}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.utils.argmax": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 4}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 11}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}}, "df": 6, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.explore": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}}, "df": 12}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.explore": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.explore": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.handcrafted": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.7320508075688772}}, "df": 7}, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 3}}, "e": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 4}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 2.23606797749979}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN": {"tf": 4.47213595499958}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2.449489742783178}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 4.123105625617661}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 3.7416573867739413}, "agent.dqn.nn.mlp.MLP": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 2}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 2.8284271247461903}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2}, "agent.dqn.nn.utils.softmax": {"tf": 3}, "agent.dqn.nn.utils.scatter_": {"tf": 3.1622776601683795}, "agent.dqn.nn.utils.process_graph": {"tf": 4}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.449489742783178}, "agent.dqn.utils.console": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 2.23606797749979}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3.3166247903554}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 2.23606797749979}, "agent.dqn.utils.save_validation": {"tf": 2.8284271247461903}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 3.4641016151377544}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 2.449489742783178}, "agent.policy.manage_memory": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 3}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 2.23606797749979}, "agent.utils.list_duplicates_of": {"tf": 3}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 2.6457513110645907}}, "df": 57, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}}, "df": 2}}, "m": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2}, "n": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 19}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}}, "df": 2}}, "o": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 3.872983346207417}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN": {"tf": 3}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.6457513110645907}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 1.4142135623730951}, "agent.utils.seed_everything": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 37, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.train": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.utils.read_data": {"tf": 1.4142135623730951}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.plot_results": {"tf": 2.449489742783178}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.utils.read_data": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.policy": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.dqn.utils.target_hard_update": {"tf": 1.7320508075688772}, "agent.utils.get_duplicate_dicts": {"tf": 2.23606797749979}}, "df": 7}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 2, "n": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"agent.policy.explore": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.test": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.utils.read_data": {"tf": 1.7320508075688772}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 2}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2}, "agent.dqn.nn.utils.softmax": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.scatter_": {"tf": 2.8284271247461903}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3.4641016151377544}, "agent.utils.positional_encoding": {"tf": 2}}, "df": 7, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 5}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 8, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.policy.answer_question": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}}}}}, "+": {"1": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.handcrafted": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}}, "df": 3}, "d": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils": {"tf": 1}, "agent.utils": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.handcrafted": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}}, "df": 2}}, "y": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 4, "s": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 3.1622776601683795}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2.449489742783178}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3}, "agent.utils.get_duplicate_dicts": {"tf": 3}, "agent.utils.list_duplicates_of": {"tf": 3.872983346207417}}, "df": 4}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.8284271247461903}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 2.8284271247461903}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 3.4641016151377544}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.6457513110645907}, "agent.dqn.utils.save_final_results": {"tf": 2}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1.7320508075688772}, "agent.handcrafted": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 31, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}, "agent.policy.explore": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 17}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 11, "s": {"docs": {"agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.utils": {"tf": 1}, "agent.utils": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}}}, "g": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1.4142135623730951}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "i": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 5, "t": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 7, "s": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.handcrafted": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 3.1622776601683795}}, "df": 2, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 2}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2}, "agent.utils.get_duplicate_dicts": {"tf": 1.7320508075688772}, "agent.utils.list_duplicates_of": {"tf": 2.23606797749979}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.7320508075688772}}, "df": 23, "t": {"docs": {"agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.policy.encode_observation": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.449489742783178}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "o": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 7, "d": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.6457513110645907}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1.7320508075688772}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.7320508075688772}}, "df": 11}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 2}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}}, "df": 9}}}, "v": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}}, "df": 2}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 3}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 3}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 2}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 23}, "d": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.policy": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 10}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 2.449489742783178}, "agent.dqn.utils.compute_loss_explore": {"tf": 2.449489742783178}, "agent.dqn.utils.update_model": {"tf": 2.23606797749979}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.target_hard_update": {"tf": 2}, "agent.handcrafted": {"tf": 1}}, "df": 19}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.utils.update_epsilon": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "p": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.update_model": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}}}, "k": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}, "s": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 2}}, "df": 7}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}, "o": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.utils.read_data": {"tf": 1.7320508075688772}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.utils.list_duplicates_of": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 3.4641016151377544}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 3}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.handcrafted": {"tf": 1}}, "df": 2}, "docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 6}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "w": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 2.6457513110645907}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}}, "df": 3}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {"agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.remove_results_from_disk": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.remove_results_from_disk": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.read_data": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 33}, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}, "agent.utils.read_data": {"tf": 1}}, "df": 5}}, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}}, "df": 12, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 6}, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP": {"tf": 1}}, "df": 3}, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 3}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.policy.explore": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.seed_everything": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.6457513110645907}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn": {"tf": 1}, "agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.handcrafted": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 7}}}}}}}}, ":": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.reset": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 6}}}, "y": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 8}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 5}}}}}, "e": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 2}, "agent.dqn.utils.ReplayBuffer": {"tf": 3.1622776601683795}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 16, "s": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.449489742783178}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_epsilon": {"tf": 3.3166247903554}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 5, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 1.4142135623730951}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2.6457513110645907}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.utils.seed_everything": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2.449489742783178}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.rel_transform": {"tf": 2.23606797749979}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 2.6457513110645907}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 2.23606797749979}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 13}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 3}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.449489742783178}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 2.449489742783178}}, "df": 6, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.4142135623730951}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.target_hard_update": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.explore": {"tf": 1.7320508075688772}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 13}}}}, "n": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_json": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 6}, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.mlp.MLP": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.update_model": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.console": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1, "d": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 2.6457513110645907}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 9}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.explore": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.test": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 2}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}}, "v": {"2": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.utils.read_data": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 2.449489742783178}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 7}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2.23606797749979}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}}, "df": 13}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.positional_encoding": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.utils.read_data": {"tf": 1.7320508075688772}, "agent.utils.get_duplicate_dicts": {"tf": 3}, "agent.utils.list_duplicates_of": {"tf": 3.1622776601683795}}, "df": 17, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.target_hard_update": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.7320508075688772}, "agent.dqn.utils.update_model": {"tf": 1.7320508075688772}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"agent.dqn.nn.gnn": {"tf": 1}, "agent.dqn.nn.utils": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1}, "k": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1, "s": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 7, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 3}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2.23606797749979}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.answer_question": {"tf": 1.7320508075688772}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.policy": {"tf": 1.4142135623730951}}, "df": 3}}}, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.23606797749979}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2.23606797749979}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.explore": {"tf": 1.7320508075688772}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}}, "df": 13}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.read_data": {"tf": 1.4142135623730951}, "agent.utils.load_questions": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "d": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.load_questions": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.console": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.plot_results": {"tf": 3.1622776601683795}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.mlp.MLP": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.utils.write_pickle": {"tf": 1}, "agent.utils.read_pickle": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 2}, "agent.policy.answer_question": {"tf": 2.8284271247461903}}, "df": 18, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 4, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 4}}, "p": {"docs": {"agent.policy.explore": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 2.8284271247461903}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.encode_observation": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_epsilon": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}}, "df": 1}}}}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}}, "df": 1}}}}, "docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 3.1622776601683795}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 14}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.7320508075688772}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1.7320508075688772}, "agent.dqn.utils.target_hard_update": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.encode_observation": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2.23606797749979}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}, "agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"agent.dqn.nn.mlp.MLP": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}}, "df": 3}}}}}}}}, "b": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 2.449489742783178}}, "df": 1, "y": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 5}, "e": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 2}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 2}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}}, "df": 1}, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 3}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.7320508075688772}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 4}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.7320508075688772}, "agent.policy.answer_question": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}}}, "f": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 3.7416573867739413}, "agent.dqn.dqn.DQNAgent.step": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 2.23606797749979}, "agent.dqn.nn.gnn.GNN.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.449489742783178}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 2.449489742783178}, "agent.dqn.nn.mlp.MLP": {"tf": 2}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 2}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.8284271247461903}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.process_graph": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer": {"tf": 3.4641016151377544}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.23606797749979}, "agent.dqn.utils.save_final_results": {"tf": 2}, "agent.dqn.utils.find_non_masked_rows": {"tf": 3}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 2}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2.449489742783178}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.utils.read_data": {"tf": 1.7320508075688772}, "agent.utils.get_duplicate_dicts": {"tf": 1.7320508075688772}, "agent.utils.list_duplicates_of": {"tf": 2.23606797749979}, "agent.utils.positional_encoding": {"tf": 1.7320508075688772}}, "df": 41, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.dqn.utils.update_model": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 22}, "b": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 3}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.4142135623730951}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.utils.read_data": {"tf": 1.7320508075688772}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.policy.encode_all_observations": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.test": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}}}}}}}, "q": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.utils.plot_results": {"tf": 2.8284271247461903}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}}, "df": 9, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.answer_question": {"tf": 1.7320508075688772}, "agent.utils.load_questions": {"tf": 1}}, "df": 5, "s": {"docs": {"agent.policy.answer_question": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1.4142135623730951}}, "df": 6, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.qual_transform": {"tf": 2.449489742783178}, "agent.dqn.nn.stare_conv.StarEConvLayer.qualifier_aggregate": {"tf": 2}, "agent.dqn.nn.stare_conv.StarEConvLayer.update_rel_emb_with_qualifier": {"tf": 2.449489742783178}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 2.23606797749979}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}}, "df": 3}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.encode_observation": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 2, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.23606797749979}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 5.291502622129181}}, "df": 2}}}, "a": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 3}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.7320508075688772}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.get_intrinsic_explore_reward": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"agent.policy.manage_memory": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}}, "df": 2}, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1.7320508075688772}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.dqn.DQNAgent.step": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 2}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 2}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.scatter_": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer": {"tf": 2.449489742783178}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 2.449489742783178}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}}, "df": 9, "d": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.mlp": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.extract_entities_and_relations": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 2}, "agent.dqn.utils.ReplayBuffer": {"tf": 2}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}}, "df": 7, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.fill_replay_buffer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.policy.encode_observation": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_final_results": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 4, "d": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1.4142135623730951}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.dqn.dqn.DQNAgent.reset": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}, "agent.policy.explore": {"tf": 1}, "agent.policy.answer_question": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.449489742783178}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 2.6457513110645907}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1.4142135623730951}, "agent.policy.explore": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "e": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1, "d": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2.449489742783178}, "agent.utils.seed_everything": {"tf": 1.4142135623730951}}, "df": 2}}, "q": {"docs": {"agent.utils.list_duplicates_of": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "f": {"docs": {"agent.dqn.utils.save_final_results": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 2.8284271247461903}, "agent.utils.list_duplicates_of": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.policy.encode_observation": {"tf": 1.4142135623730951}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.policy.answer_question": {"tf": 1.4142135623730951}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.8284271247461903}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2}, "agent.dqn.nn.utils.process_graph": {"tf": 3}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}, "agent.dqn.utils.select_action": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.dqn.DQNAgent.plot_results": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"agent.dqn.dqn.DQNAgent.validate_test_middle": {"tf": 1}, "agent.dqn.utils.plot_results": {"tf": 2}, "agent.dqn.utils.save_final_results": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 2}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.policy.answer_question": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.nn.mlp": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.policy.explore": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.7320508075688772}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 2}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.utils.select_action": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"agent.utils.read_data": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"agent.policy": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"agent.utils.read_yaml": {"tf": 1}, "agent.utils.write_yaml": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"agent.dqn.dqn.DQNAgent": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1}, "agent.dqn.utils.ReplayBuffer": {"tf": 1}}, "df": 3, "s": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.policy": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.dqn.nn.gnn.GNN": {"tf": 1}, "agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.policy": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.23606797749979}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.ReplayBuffer.store": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 1}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2.449489742783178}, "agent.dqn.nn.mlp.MLP": {"tf": 1}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 2.23606797749979}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 2.449489742783178}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 2.23606797749979}, "agent.dqn.utils.select_action": {"tf": 1.4142135623730951}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.dqn.utils.save_states_q_values_actions": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}}, "df": 17, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 2}, "agent.dqn.nn.gnn.GNN.process_batch": {"tf": 2}, "agent.dqn.nn.gnn.GNN.forward": {"tf": 1.7320508075688772}, "agent.dqn.nn.mlp.MLP": {"tf": 1.4142135623730951}, "agent.dqn.nn.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.__init__": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.coalesce_quals": {"tf": 1}, "agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.process_graph": {"tf": 1.7320508075688772}, "agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 18}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}, "agent.utils.positional_encoding": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.test": {"tf": 1}, "agent.utils.get_duplicate_dicts": {"tf": 1}}, "df": 3, "t": {"docs": {"agent.dqn.utils.plot_results": {"tf": 1}, "agent.dqn.utils.save_final_results": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_mm": {"tf": 1}, "agent.dqn.utils.compute_loss_explore": {"tf": 1}, "agent.dqn.utils.update_model": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.__init__": {"tf": 1}, "agent.policy": {"tf": 1}, "agent.utils.list_duplicates_of": {"tf": 1}, "agent.utils.is_running_notebook": {"tf": 1}}, "df": 10, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"agent.dqn.dqn.DQNAgent.init_memory_systems": {"tf": 1}, "agent.handcrafted.HandcraftedAgent.init_memory_systems": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.find_non_masked_rows": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"agent.utils.is_running_notebook": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.compute_norm": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"agent.dqn.nn.utils.process_graph": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.7320508075688772}, "agent.dqn.nn.stare_conv.StarEConvLayer.update": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.softmax": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 2.8284271247461903}, "agent.policy.encode_observation": {"tf": 1}, "agent.policy.encode_all_observations": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 4, "e": {"docs": {"agent.dqn.nn.utils.softmax": {"tf": 1}, "agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}, "agent.dqn.utils.ReplayBuffer": {"tf": 1.7320508075688772}, "agent.dqn.utils.ReplayBuffer.__init__": {"tf": 1}, "agent.dqn.utils.save_validation": {"tf": 1}, "agent.policy.find_agent_location": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.utils.scatter_": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 3.605551275463989}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 2.6457513110645907}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.7320508075688772}}, "df": 4}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 2.6457513110645907}, "agent.dqn.utils.ReplayBuffer.sample_batch": {"tf": 2.6457513110645907}, "agent.dqn.utils.compute_loss_mm": {"tf": 1.7320508075688772}, "agent.dqn.utils.compute_loss_explore": {"tf": 1.7320508075688772}, "agent.utils.positional_encoding": {"tf": 1}}, "df": 5}}}}}}}, "x": {"docs": {"agent.dqn.nn.mlp.MLP.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.forward": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1.4142135623730951}}, "df": 3, "x": {"docs": {}, "df": 0, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {"agent.dqn.dqn.DQNAgent.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.reset_parameters": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"agent.dqn.nn.gnn.GNN.process_batch": {"tf": 1.4142135623730951}, "agent.dqn.nn.utils.process_graph": {"tf": 1.4142135623730951}, "agent.utils.get_duplicate_dicts": {"tf": 1.4142135623730951}}, "df": 3}, "e": {"docs": {}, "df": 0, "p": {"docs": {"agent.dqn.utils.save_validation": {"tf": 1}, "agent.policy.manage_memory": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"agent.dqn.nn.stare_conv": {"tf": 1}, "agent.dqn.nn.stare_conv.StarEConvLayer": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1}}}, "j": {"docs": {"agent.dqn.nn.stare_conv.StarEConvLayer.message": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"agent.handcrafted.HandcraftedAgent": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"agent.utils.read_json": {"tf": 1}, "agent.utils.write_json": {"tf": 1}, "agent.utils.load_questions": {"tf": 1}}, "df": 3}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"agent.dqn.utils.find_non_masked_rows": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"agent.dqn.utils.ReplayBuffer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();